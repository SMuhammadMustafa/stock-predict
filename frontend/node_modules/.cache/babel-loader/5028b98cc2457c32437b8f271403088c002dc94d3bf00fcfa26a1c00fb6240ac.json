{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studies\\\\FYP\\\\Frontend\\\\fyp\\\\src\\\\components\\\\StockComparison.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\nimport CustomTooltip from \"./CustomTooltip\";\nimport axios from 'axios';\n\n// Colors array for different stocks\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lineColors = ['#ffffff', '#ffc333', '#3333ff', '#2aa34d', '#cc33ff', '#33cccc'];\n\n// Define available periods\nconst periods = [{\n  label: '1 Week',\n  value: '1W'\n}, {\n  label: '1 Month',\n  value: '1M'\n}, {\n  label: '1 Year',\n  value: '1Y'\n}, {\n  label: '5 Years',\n  value: '5Y'\n}];\n\n// Filter data based on the selected time period\nconst filterDataByPeriod = (data, period) => {\n  const now = new Date(\"2024-09-18\"); // Use the current date as a reference\n  let filteredData = [];\n  switch (period) {\n    case '1W':\n      // Last 1 week\n      filteredData = data.filter(item => now - new Date(item.timestamp) <= 7 * 24 * 60 * 60 * 1000);\n      break;\n    case '1M':\n      // Last 1 month\n      filteredData = data.filter(item => now - new Date(item.timestamp) <= 30 * 24 * 60 * 60 * 1000);\n      break;\n    case '1Y':\n      // Last 1 year\n      filteredData = data.filter(item => now - new Date(item.timestamp) <= 365 * 24 * 60 * 60 * 1000);\n      break;\n    case '5Y':\n      // Last 5 years\n      filteredData = data.filter(item => now - new Date(item.timestamp) <= 5 * 365 * 24 * 60 * 60 * 1000);\n      break;\n    default:\n      filteredData = data; // Default to showing all data\n      break;\n  }\n  return filteredData;\n};\nconst StockComparison = () => {\n  _s();\n  const [stockData, setStockData] = useState({});\n  const [availableStocks, setAvailableStocks] = useState([]);\n  const [addedStocks, setAddedStocks] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedStock, setSelectedStock] = useState('');\n  const [selectedPeriod, setSelectedPeriod] = useState('1W');\n\n  // Fetch ticker names from the backend\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/tickers').then(response => {\n      setAvailableStocks(response.data);\n      if (response.data.length > 0) {\n        setSelectedStock(response.data[0]); // Set default ticker to the first one\n      }\n    }).catch(error => {\n      console.error('Error fetching tickers', error);\n    });\n  }, []);\n\n  // Fetch stock data from API for a specific stock\n  const fetchStockData = ticker => {\n    axios.get(`http://localhost:5000/api/stock-data/${ticker}`).then(response => {\n      const formattedData = response.data.map(item => ({\n        timestamp: new Date(item.timestamp).toLocaleDateString('en-US'),\n        open: item.open,\n        close: item.close\n      })).sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n      setStockData(prevState => ({\n        ...prevState,\n        [ticker]: formattedData\n      }));\n    }).catch(error => {\n      console.error('Error fetching stock data', error);\n    });\n  };\n\n  // Handle adding stock from the modal\n  const handleAddStock = () => {\n    if (selectedStock) {\n      setAddedStocks([...addedStocks, selectedStock]);\n      fetchStockData(selectedStock); // Fetch full data for the stock\n      setAvailableStocks(availableStocks.filter(stock => stock !== selectedStock));\n      setIsModalOpen(false); // Close the modal after adding the stock\n    }\n  };\n\n  // Open the modal to select a stock\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  // Close the modal without adding a stock\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // Handle selecting a stock from the dropdown in the modal\n  const handleStockSelection = e => {\n    setSelectedStock(e.target.value);\n  };\n\n  // Handle period change\n  const handlePeriodChange = period => {\n    setSelectedPeriod(period);\n  };\n\n  // Get combined stock data in one pass\n  const getCombinedData = () => {\n    const combinedData = [];\n    const tempMap = new Map(); // Temporary map to hold timestamp and stock values\n\n    // Gather stock data from all stocks\n    addedStocks.forEach(stock => {\n      const filteredData = filterDataByPeriod(stockData[stock] || [], selectedPeriod);\n      filteredData.forEach(item => {\n        const timestamp = item.timestamp;\n        const closePrice = item.close;\n\n        // Initialize a new entry if it doesn't exist\n        if (!tempMap.has(timestamp)) {\n          tempMap.set(timestamp, {\n            timestamp\n          });\n        }\n\n        // Update the entry with the stock's close price\n        tempMap.get(timestamp)[stock] = closePrice;\n      });\n    });\n\n    // Iterate over the temp map to build the final combined data\n    tempMap.forEach(entry => {\n      // Check if all stock values are present (no nulls)\n      const hasNullValue = addedStocks.some(stock => entry[stock] === null);\n\n      // Only add to combinedData if there are no null values\n      if (!hasNullValue) {\n        combinedData.push(entry);\n      }\n    });\n    return combinedData;\n  };\n  const combinedData = getCombinedData(); // Call this once before rendering\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Compare Stocks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange('1W'),\n        style: {\n          marginRight: '10px',\n          padding: '10px 20px',\n          backgroundColor: selectedPeriod === '1W' ? '#ffc333' : '#161616',\n          cursor: 'pointer'\n        },\n        children: \"1 Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange('1M'),\n        style: {\n          marginRight: '10px',\n          padding: '10px 20px',\n          backgroundColor: selectedPeriod === '1M' ? '#ffc333' : '#161616',\n          cursor: 'pointer'\n        },\n        children: \"1 Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange('1Y'),\n        style: {\n          marginRight: '10px',\n          padding: '10px 20px',\n          backgroundColor: selectedPeriod === '1Y' ? '#ffc333' : '#161616',\n          cursor: 'pointer'\n        },\n        children: \"1 Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange('5Y'),\n        style: {\n          padding: '10px 20px',\n          backgroundColor: selectedPeriod === '5Y' ? '#ffc333' : '#161616',\n          cursor: 'pointer'\n        },\n        children: \"5 Years\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      style: {\n        marginBottom: '20px',\n        padding: '10px 20px',\n        backgroundColor: '#161616',\n        color: '#fff',\n        border: 'none',\n        cursor: 'pointer'\n      },\n      children: \"Add Stocks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: modalStyles.overlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyles.modal,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a stock to add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedStock,\n          onChange: handleStockSelection,\n          style: {\n            padding: '10px',\n            width: '100%',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), availableStocks.map(stock => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: stock,\n            children: stock\n          }, stock, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddStock,\n            style: {\n              ...modalStyles.button,\n              backgroundColor: '#161616'\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            style: {\n              ...modalStyles.button,\n              backgroundColor: '#ff3333'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: combinedData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), addedStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          data: combinedData // Use combined data here\n          ,\n          dataKey: stock // Use the stock's data key (assumes the stock name)\n          ,\n          name: stock,\n          stroke: lineColors[index % lineColors.length] // Assign a unique color\n          ,\n          strokeWidth: 3,\n          activeDot: {\n            r: 8\n          }\n        }, stock, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n\n// Styles for the modal\n_s(StockComparison, \"2sFwwnXOZm+PXHyQY3qGV4EZzAk=\");\n_c = StockComparison;\nconst modalStyles = {\n  overlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  modal: {\n    backgroundColor: '#fff',\n    padding: '20px',\n    borderRadius: '5px',\n    width: '400px',\n    boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\n  },\n  button: {\n    padding: '10px 20px',\n    marginLeft: '10px',\n    color: '#fff',\n    border: 'none',\n    cursor: 'pointer'\n  }\n};\nexport default StockComparison;\nvar _c;\n$RefreshReg$(_c, \"StockComparison\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","Legend","ResponsiveContainer","CustomTooltip","axios","jsxDEV","_jsxDEV","lineColors","periods","label","value","filterDataByPeriod","data","period","now","Date","filteredData","filter","item","timestamp","StockComparison","_s","stockData","setStockData","availableStocks","setAvailableStocks","addedStocks","setAddedStocks","isModalOpen","setIsModalOpen","selectedStock","setSelectedStock","selectedPeriod","setSelectedPeriod","get","then","response","length","catch","error","console","fetchStockData","ticker","formattedData","map","toLocaleDateString","open","close","sort","a","b","prevState","handleAddStock","stock","openModal","closeModal","handleStockSelection","e","target","handlePeriodChange","getCombinedData","combinedData","tempMap","Map","forEach","closePrice","has","set","entry","hasNullValue","some","push","children","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","onClick","marginRight","padding","backgroundColor","cursor","marginBottom","color","border","modalStyles","overlay","modal","onChange","width","disabled","textAlign","button","height","strokeDasharray","dataKey","content","index","type","name","stroke","strokeWidth","activeDot","r","_c","position","top","left","right","bottom","display","justifyContent","alignItems","borderRadius","boxShadow","marginLeft","$RefreshReg$"],"sources":["D:/Studies/FYP/Frontend/fyp/src/components/StockComparison.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\r\nimport CustomTooltip from \"./CustomTooltip\";\r\nimport axios from 'axios';\r\n\r\n// Colors array for different stocks\r\nconst lineColors = ['#ffffff', '#ffc333', '#3333ff', '#2aa34d', '#cc33ff', '#33cccc'];\r\n\r\n// Define available periods\r\nconst periods = [\r\n  { label: '1 Week', value: '1W' },\r\n  { label: '1 Month', value: '1M' },\r\n  { label: '1 Year', value: '1Y' },\r\n  { label: '5 Years', value: '5Y' }\r\n];\r\n\r\n// Filter data based on the selected time period\r\nconst filterDataByPeriod = (data, period) => {\r\n  const now = new Date(\"2024-09-18\"); // Use the current date as a reference\r\n  let filteredData = [];\r\n\r\n  switch (period) {\r\n    case '1W': // Last 1 week\r\n      filteredData = data.filter(item => (now - new Date(item.timestamp)) <= 7 * 24 * 60 * 60 * 1000);\r\n      break;\r\n    case '1M': // Last 1 month\r\n      filteredData = data.filter(item => (now - new Date(item.timestamp)) <= 30 * 24 * 60 * 60 * 1000);\r\n      break;\r\n    case '1Y': // Last 1 year\r\n      filteredData = data.filter(item => (now - new Date(item.timestamp)) <= 365 * 24 * 60 * 60 * 1000);\r\n      break;\r\n    case '5Y': // Last 5 years\r\n      filteredData = data.filter(item => (now - new Date(item.timestamp)) <= 5 * 365 * 24 * 60 * 60 * 1000);\r\n      break;\r\n    default:\r\n      filteredData = data; // Default to showing all data\r\n      break;\r\n  }\r\n\r\n  return filteredData;\r\n};\r\n\r\nconst StockComparison = () => {\r\n  const [stockData, setStockData] = useState({});\r\n  const [availableStocks, setAvailableStocks] = useState([]);\r\n  const [addedStocks, setAddedStocks] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedStock, setSelectedStock] = useState('');\r\n  const [selectedPeriod, setSelectedPeriod] = useState('1W');\r\n\r\n  // Fetch ticker names from the backend\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/tickers')\r\n      .then(response => {\r\n        setAvailableStocks(response.data);\r\n        if (response.data.length > 0) {\r\n          setSelectedStock(response.data[0]); // Set default ticker to the first one\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching tickers', error);\r\n      });\r\n  }, []);\r\n\r\n  // Fetch stock data from API for a specific stock\r\n  const fetchStockData = (ticker) => {\r\n    axios.get(`http://localhost:5000/api/stock-data/${ticker}`)\r\n      .then(response => {\r\n        const formattedData = response.data.map(item => ({\r\n          timestamp: new Date(item.timestamp).toLocaleDateString('en-US'),\r\n          open: item.open,\r\n          close: item.close,\r\n        })).sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n\r\n        setStockData(prevState => ({\r\n          ...prevState,\r\n          [ticker]: formattedData\r\n        }));\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching stock data', error);\r\n      });\r\n  };\r\n\r\n  // Handle adding stock from the modal\r\n  const handleAddStock = () => {\r\n    if (selectedStock) {\r\n      setAddedStocks([...addedStocks, selectedStock]);\r\n      fetchStockData(selectedStock); // Fetch full data for the stock\r\n      setAvailableStocks(availableStocks.filter(stock => stock !== selectedStock));\r\n      setIsModalOpen(false); // Close the modal after adding the stock\r\n    }\r\n  };\r\n\r\n  // Open the modal to select a stock\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Close the modal without adding a stock\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  // Handle selecting a stock from the dropdown in the modal\r\n  const handleStockSelection = (e) => {\r\n    setSelectedStock(e.target.value);\r\n  };\r\n\r\n  // Handle period change\r\n  const handlePeriodChange = (period) => {\r\n    setSelectedPeriod(period);\r\n  };\r\n\r\n  // Get combined stock data in one pass\r\n  const getCombinedData = () => {\r\n    const combinedData = [];\r\n    const tempMap = new Map(); // Temporary map to hold timestamp and stock values\r\n\r\n    // Gather stock data from all stocks\r\n    addedStocks.forEach(stock => {\r\n      const filteredData = filterDataByPeriod(stockData[stock] || [], selectedPeriod);\r\n\r\n      filteredData.forEach(item => {\r\n        const timestamp = item.timestamp;\r\n        const closePrice = item.close;\r\n\r\n        // Initialize a new entry if it doesn't exist\r\n        if (!tempMap.has(timestamp)) {\r\n          tempMap.set(timestamp, { timestamp });\r\n        }\r\n\r\n        // Update the entry with the stock's close price\r\n        tempMap.get(timestamp)[stock] = closePrice;\r\n      });\r\n    });\r\n\r\n    // Iterate over the temp map to build the final combined data\r\n    tempMap.forEach(entry => {\r\n      // Check if all stock values are present (no nulls)\r\n      const hasNullValue = addedStocks.some(stock => entry[stock] === null);\r\n      \r\n      // Only add to combinedData if there are no null values\r\n      if (!hasNullValue) {\r\n        combinedData.push(entry);\r\n      }\r\n    });\r\n\r\n    return combinedData;\r\n  };\r\n\r\n  const combinedData = getCombinedData(); // Call this once before rendering\r\n\r\n  return (\r\n    <div>\r\n      <h2>Compare Stocks</h2>\r\n\r\n      {/* Toggle buttons to select the period */}\r\n      <div style={{ margin: '20px 0' }}>\r\n        <button\r\n          onClick={() => handlePeriodChange('1W')}\r\n          style={{\r\n            marginRight: '10px',\r\n            padding: '10px 20px',\r\n            backgroundColor: selectedPeriod === '1W' ? '#ffc333' : '#161616',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          1 Week\r\n        </button>\r\n        <button\r\n          onClick={() => handlePeriodChange('1M')}\r\n          style={{\r\n            marginRight: '10px',\r\n            padding: '10px 20px',\r\n            backgroundColor: selectedPeriod === '1M' ? '#ffc333' : '#161616',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          1 Month\r\n        </button>\r\n        <button\r\n          onClick={() => handlePeriodChange('1Y')}\r\n          style={{\r\n            marginRight: '10px',\r\n            padding: '10px 20px',\r\n            backgroundColor: selectedPeriod === '1Y' ? '#ffc333' : '#161616',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          1 Year\r\n        </button>\r\n        <button\r\n          onClick={() => handlePeriodChange('5Y')}\r\n          style={{\r\n            padding: '10px 20px',\r\n            backgroundColor: selectedPeriod === '5Y' ? '#ffc333' : '#161616',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          5 Years\r\n        </button>\r\n      </div>\r\n\r\n      {/* Button to open modal to add stocks */}\r\n      <button\r\n        onClick={openModal}\r\n        style={{\r\n          marginBottom: '20px',\r\n          padding: '10px 20px',\r\n          backgroundColor: '#161616',\r\n          color: '#fff',\r\n          border: 'none',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        Add Stocks\r\n      </button>\r\n\r\n      {/* Modal for selecting stocks */}\r\n      {isModalOpen && (\r\n        <div style={modalStyles.overlay}>\r\n          <div style={modalStyles.modal}>\r\n            <h3>Select a stock to add</h3>\r\n            <select\r\n              value={selectedStock}\r\n              onChange={handleStockSelection}\r\n              style={{ padding: '10px', width: '100%', marginBottom: '20px' }}\r\n            >\r\n              <option value=\"\" disabled>Select a stock</option>\r\n              {availableStocks.map(stock => (\r\n                <option key={stock} value={stock}>\r\n                  {stock}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <div style={{ textAlign: 'right' }}>\r\n              <button onClick={handleAddStock} style={{ ...modalStyles.button, backgroundColor: '#161616' }}>Add</button>\r\n              <button onClick={closeModal} style={{ ...modalStyles.button, backgroundColor: '#ff3333' }}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <ResponsiveContainer width=\"100%\" height={400}>\r\n        <LineChart data={combinedData}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"timestamp\" />\r\n          <YAxis />\r\n          <Tooltip content={<CustomTooltip />} />\r\n          <Legend />\r\n          {/* Get combined data to render lines */}\r\n          {addedStocks.map((stock, index) => (\r\n            <Line\r\n              key={stock}\r\n              type=\"monotone\"\r\n              data={combinedData} // Use combined data here\r\n              dataKey={stock} // Use the stock's data key (assumes the stock name)\r\n              name={stock}\r\n              stroke={lineColors[index % lineColors.length]}  // Assign a unique color\r\n              strokeWidth={3}\r\n              activeDot={{ r: 8 }}\r\n            />\r\n          ))}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Styles for the modal\r\nconst modalStyles = {\r\n  overlay: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  modal: {\r\n    backgroundColor: '#fff',\r\n    padding: '20px',\r\n    borderRadius: '5px',\r\n    width: '400px',\r\n    boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\r\n  },\r\n  button: {\r\n    padding: '10px 20px',\r\n    marginLeft: '10px',\r\n    color: '#fff',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n  }\r\n};\r\n\r\nexport default StockComparison;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,aAAa,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AAC7G,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;;AAErF;AACA,MAAMC,OAAO,GAAG,CACd;EAAEC,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAK,CAAC,EAChC;EAAED,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAK,CAAC,EACjC;EAAED,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAK,CAAC,EAChC;EAAED,KAAK,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAK,CAAC,CAClC;;AAED;AACA,MAAMC,kBAAkB,GAAGA,CAACC,IAAI,EAAEC,MAAM,KAAK;EAC3C,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;EACpC,IAAIC,YAAY,GAAG,EAAE;EAErB,QAAQH,MAAM;IACZ,KAAK,IAAI;MAAE;MACTG,YAAY,GAAGJ,IAAI,CAACK,MAAM,CAACC,IAAI,IAAKJ,GAAG,GAAG,IAAIC,IAAI,CAACG,IAAI,CAACC,SAAS,CAAC,IAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;MAC/F;IACF,KAAK,IAAI;MAAE;MACTH,YAAY,GAAGJ,IAAI,CAACK,MAAM,CAACC,IAAI,IAAKJ,GAAG,GAAG,IAAIC,IAAI,CAACG,IAAI,CAACC,SAAS,CAAC,IAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;MAChG;IACF,KAAK,IAAI;MAAE;MACTH,YAAY,GAAGJ,IAAI,CAACK,MAAM,CAACC,IAAI,IAAKJ,GAAG,GAAG,IAAIC,IAAI,CAACG,IAAI,CAACC,SAAS,CAAC,IAAK,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;MACjG;IACF,KAAK,IAAI;MAAE;MACTH,YAAY,GAAGJ,IAAI,CAACK,MAAM,CAACC,IAAI,IAAKJ,GAAG,GAAG,IAAIC,IAAI,CAACG,IAAI,CAACC,SAAS,CAAC,IAAK,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;MACrG;IACF;MACEH,YAAY,GAAGJ,IAAI,CAAC,CAAC;MACrB;EACJ;EAEA,OAAOI,YAAY;AACrB,CAAC;AAED,MAAMI,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAAC8B,eAAe,EAAEC,kBAAkB,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACgC,WAAW,EAAEC,cAAc,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkC,WAAW,EAAEC,cAAc,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACoC,aAAa,EAAEC,gBAAgB,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACsC,cAAc,EAAEC,iBAAiB,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;;EAE1D;EACAD,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC8B,GAAG,CAAC,mCAAmC,CAAC,CAC3CC,IAAI,CAACC,QAAQ,IAAI;MAChBX,kBAAkB,CAACW,QAAQ,CAACxB,IAAI,CAAC;MACjC,IAAIwB,QAAQ,CAACxB,IAAI,CAACyB,MAAM,GAAG,CAAC,EAAE;QAC5BN,gBAAgB,CAACK,QAAQ,CAACxB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtC;IACF,CAAC,CAAC,CACD0B,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,cAAc,GAAIC,MAAM,IAAK;IACjCtC,KAAK,CAAC8B,GAAG,CAAC,wCAAwCQ,MAAM,EAAE,CAAC,CACxDP,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMO,aAAa,GAAGP,QAAQ,CAACxB,IAAI,CAACgC,GAAG,CAAC1B,IAAI,KAAK;QAC/CC,SAAS,EAAE,IAAIJ,IAAI,CAACG,IAAI,CAACC,SAAS,CAAC,CAAC0B,kBAAkB,CAAC,OAAO,CAAC;QAC/DC,IAAI,EAAE5B,IAAI,CAAC4B,IAAI;QACfC,KAAK,EAAE7B,IAAI,CAAC6B;MACd,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAInC,IAAI,CAACkC,CAAC,CAAC9B,SAAS,CAAC,GAAG,IAAIJ,IAAI,CAACmC,CAAC,CAAC/B,SAAS,CAAC,CAAC;MAEjEI,YAAY,CAAC4B,SAAS,KAAK;QACzB,GAAGA,SAAS;QACZ,CAACT,MAAM,GAAGC;MACZ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CACDL,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMa,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAItB,aAAa,EAAE;MACjBH,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAEI,aAAa,CAAC,CAAC;MAC/CW,cAAc,CAACX,aAAa,CAAC,CAAC,CAAC;MAC/BL,kBAAkB,CAACD,eAAe,CAACP,MAAM,CAACoC,KAAK,IAAIA,KAAK,KAAKvB,aAAa,CAAC,CAAC;MAC5ED,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IACzB;EACF,CAAC;;EAED;EACA,MAAMyB,SAAS,GAAGA,CAAA,KAAM;IACtBzB,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;EACA,MAAM0B,UAAU,GAAGA,CAAA,KAAM;IACvB1B,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;;EAED;EACA,MAAM2B,oBAAoB,GAAIC,CAAC,IAAK;IAClC1B,gBAAgB,CAAC0B,CAAC,CAACC,MAAM,CAAChD,KAAK,CAAC;EAClC,CAAC;;EAED;EACA,MAAMiD,kBAAkB,GAAI9C,MAAM,IAAK;IACrCoB,iBAAiB,CAACpB,MAAM,CAAC;EAC3B,CAAC;;EAED;EACA,MAAM+C,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,YAAY,GAAG,EAAE;IACvB,MAAMC,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC,CAAC,CAAC;;IAE3B;IACArC,WAAW,CAACsC,OAAO,CAACX,KAAK,IAAI;MAC3B,MAAMrC,YAAY,GAAGL,kBAAkB,CAACW,SAAS,CAAC+B,KAAK,CAAC,IAAI,EAAE,EAAErB,cAAc,CAAC;MAE/EhB,YAAY,CAACgD,OAAO,CAAC9C,IAAI,IAAI;QAC3B,MAAMC,SAAS,GAAGD,IAAI,CAACC,SAAS;QAChC,MAAM8C,UAAU,GAAG/C,IAAI,CAAC6B,KAAK;;QAE7B;QACA,IAAI,CAACe,OAAO,CAACI,GAAG,CAAC/C,SAAS,CAAC,EAAE;UAC3B2C,OAAO,CAACK,GAAG,CAAChD,SAAS,EAAE;YAAEA;UAAU,CAAC,CAAC;QACvC;;QAEA;QACA2C,OAAO,CAAC5B,GAAG,CAACf,SAAS,CAAC,CAACkC,KAAK,CAAC,GAAGY,UAAU;MAC5C,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACAH,OAAO,CAACE,OAAO,CAACI,KAAK,IAAI;MACvB;MACA,MAAMC,YAAY,GAAG3C,WAAW,CAAC4C,IAAI,CAACjB,KAAK,IAAIe,KAAK,CAACf,KAAK,CAAC,KAAK,IAAI,CAAC;;MAErE;MACA,IAAI,CAACgB,YAAY,EAAE;QACjBR,YAAY,CAACU,IAAI,CAACH,KAAK,CAAC;MAC1B;IACF,CAAC,CAAC;IAEF,OAAOP,YAAY;EACrB,CAAC;EAED,MAAMA,YAAY,GAAGD,eAAe,CAAC,CAAC,CAAC,CAAC;;EAExC,oBACEtD,OAAA;IAAAkE,QAAA,gBACElE,OAAA;MAAAkE,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGvBtE,OAAA;MAAKuE,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAS,CAAE;MAAAN,QAAA,gBAC/BlE,OAAA;QACEyE,OAAO,EAAEA,CAAA,KAAMpB,kBAAkB,CAAC,IAAI,CAAE;QACxCkB,KAAK,EAAE;UACLG,WAAW,EAAE,MAAM;UACnBC,OAAO,EAAE,WAAW;UACpBC,eAAe,EAAElD,cAAc,KAAK,IAAI,GAAG,SAAS,GAAG,SAAS;UAChEmD,MAAM,EAAE;QACV,CAAE;QAAAX,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtE,OAAA;QACEyE,OAAO,EAAEA,CAAA,KAAMpB,kBAAkB,CAAC,IAAI,CAAE;QACxCkB,KAAK,EAAE;UACLG,WAAW,EAAE,MAAM;UACnBC,OAAO,EAAE,WAAW;UACpBC,eAAe,EAAElD,cAAc,KAAK,IAAI,GAAG,SAAS,GAAG,SAAS;UAChEmD,MAAM,EAAE;QACV,CAAE;QAAAX,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtE,OAAA;QACEyE,OAAO,EAAEA,CAAA,KAAMpB,kBAAkB,CAAC,IAAI,CAAE;QACxCkB,KAAK,EAAE;UACLG,WAAW,EAAE,MAAM;UACnBC,OAAO,EAAE,WAAW;UACpBC,eAAe,EAAElD,cAAc,KAAK,IAAI,GAAG,SAAS,GAAG,SAAS;UAChEmD,MAAM,EAAE;QACV,CAAE;QAAAX,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtE,OAAA;QACEyE,OAAO,EAAEA,CAAA,KAAMpB,kBAAkB,CAAC,IAAI,CAAE;QACxCkB,KAAK,EAAE;UACLI,OAAO,EAAE,WAAW;UACpBC,eAAe,EAAElD,cAAc,KAAK,IAAI,GAAG,SAAS,GAAG,SAAS;UAChEmD,MAAM,EAAE;QACV,CAAE;QAAAX,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNtE,OAAA;MACEyE,OAAO,EAAEzB,SAAU;MACnBuB,KAAK,EAAE;QACLO,YAAY,EAAE,MAAM;QACpBH,OAAO,EAAE,WAAW;QACpBC,eAAe,EAAE,SAAS;QAC1BG,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdH,MAAM,EAAE;MACV,CAAE;MAAAX,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAGRhD,WAAW,iBACVtB,OAAA;MAAKuE,KAAK,EAAEU,WAAW,CAACC,OAAQ;MAAAhB,QAAA,eAC9BlE,OAAA;QAAKuE,KAAK,EAAEU,WAAW,CAACE,KAAM;QAAAjB,QAAA,gBAC5BlE,OAAA;UAAAkE,QAAA,EAAI;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BtE,OAAA;UACEI,KAAK,EAAEoB,aAAc;UACrB4D,QAAQ,EAAElC,oBAAqB;UAC/BqB,KAAK,EAAE;YAAEI,OAAO,EAAE,MAAM;YAAEU,KAAK,EAAE,MAAM;YAAEP,YAAY,EAAE;UAAO,CAAE;UAAAZ,QAAA,gBAEhElE,OAAA;YAAQI,KAAK,EAAC,EAAE;YAACkF,QAAQ;YAAApB,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAChDpD,eAAe,CAACoB,GAAG,CAACS,KAAK,iBACxB/C,OAAA;YAAoBI,KAAK,EAAE2C,KAAM;YAAAmB,QAAA,EAC9BnB;UAAK,GADKA,KAAK;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACTtE,OAAA;UAAKuE,KAAK,EAAE;YAAEgB,SAAS,EAAE;UAAQ,CAAE;UAAArB,QAAA,gBACjClE,OAAA;YAAQyE,OAAO,EAAE3B,cAAe;YAACyB,KAAK,EAAE;cAAE,GAAGU,WAAW,CAACO,MAAM;cAAEZ,eAAe,EAAE;YAAU,CAAE;YAAAV,QAAA,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC3GtE,OAAA;YAAQyE,OAAO,EAAExB,UAAW;YAACsB,KAAK,EAAE;cAAE,GAAGU,WAAW,CAACO,MAAM;cAAEZ,eAAe,EAAE;YAAU,CAAE;YAAAV,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAEDtE,OAAA,CAACJ,mBAAmB;MAACyF,KAAK,EAAC,MAAM;MAACI,MAAM,EAAE,GAAI;MAAAvB,QAAA,eAC5ClE,OAAA,CAACX,SAAS;QAACiB,IAAI,EAAEiD,YAAa;QAAAW,QAAA,gBAC5BlE,OAAA,CAACN,aAAa;UAACgG,eAAe,EAAC;QAAK;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvCtE,OAAA,CAACT,KAAK;UAACoG,OAAO,EAAC;QAAW;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7BtE,OAAA,CAACR,KAAK;UAAA2E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACTtE,OAAA,CAACP,OAAO;UAACmG,OAAO,eAAE5F,OAAA,CAACH,aAAa;YAAAsE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvCtE,OAAA,CAACL,MAAM;UAAAwE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAETlD,WAAW,CAACkB,GAAG,CAAC,CAACS,KAAK,EAAE8C,KAAK,kBAC5B7F,OAAA,CAACV,IAAI;UAEHwG,IAAI,EAAC,UAAU;UACfxF,IAAI,EAAEiD,YAAa,CAAC;UAAA;UACpBoC,OAAO,EAAE5C,KAAM,CAAC;UAAA;UAChBgD,IAAI,EAAEhD,KAAM;UACZiD,MAAM,EAAE/F,UAAU,CAAC4F,KAAK,GAAG5F,UAAU,CAAC8B,MAAM,CAAE,CAAE;UAAA;UAChDkE,WAAW,EAAE,CAAE;UACfC,SAAS,EAAE;YAAEC,CAAC,EAAE;UAAE;QAAE,GAPfpD,KAAK;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQX,CACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;;AAED;AAAAvD,EAAA,CApOMD,eAAe;AAAAsF,EAAA,GAAftF,eAAe;AAqOrB,MAAMmE,WAAW,GAAG;EAClBC,OAAO,EAAE;IACPmB,QAAQ,EAAE,OAAO;IACjBC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACT7B,eAAe,EAAE,oBAAoB;IACrC8B,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDzB,KAAK,EAAE;IACLP,eAAe,EAAE,MAAM;IACvBD,OAAO,EAAE,MAAM;IACfkC,YAAY,EAAE,KAAK;IACnBxB,KAAK,EAAE,OAAO;IACdyB,SAAS,EAAE;EACb,CAAC;EACDtB,MAAM,EAAE;IACNb,OAAO,EAAE,WAAW;IACpBoC,UAAU,EAAE,MAAM;IAClBhC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdH,MAAM,EAAE;EACV;AACF,CAAC;AAED,eAAe/D,eAAe;AAAC,IAAAsF,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}