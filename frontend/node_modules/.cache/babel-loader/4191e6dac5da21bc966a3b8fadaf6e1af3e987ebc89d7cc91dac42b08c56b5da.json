{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studies\\\\FYP\\\\Frontend\\\\fyp\\\\src\\\\components\\\\StockComparison.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\nimport CustomTooltip from \"./CustomTooltip\";\nimport axios from 'axios';\n\n// Colors array for different stocks\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lineColors = ['#ffffff', '#ffc333', '#3333ff', '#2aa34d', '#cc33ff', '#33cccc'];\n\n// Define available periods\nconst periods = [{\n  label: '1 Week',\n  value: '1W'\n}, {\n  label: '1 Month',\n  value: '1M'\n}, {\n  label: '1 Year',\n  value: '1Y'\n}, {\n  label: '5 Years',\n  value: '5Y'\n}];\n\n// Helper function to generate manual timestamps\nconst generateTimestamps = period => {\n  const endDate = new Date(\"9/18/2024\");\n  let timestamps = [];\n  switch (period) {\n    case '1W':\n      // Daily timestamps for 1 week\n      for (let i = 6; i >= 0; i--) {\n        const date = new Date(endDate);\n        date.setDate(endDate.getDate() - i);\n        timestamps.push(date.toISOString().split('T')[0]); // YYYY-MM-DD format\n      }\n      break;\n    case '1M':\n      // Weekly timestamps for 1 month\n      for (let i = 4; i >= 0; i--) {\n        const date = new Date(endDate);\n        date.setDate(endDate.getDate() - i * 7);\n        timestamps.push(date.toISOString().split('T')[0]);\n      }\n      break;\n    case '1Y':\n      // Monthly timestamps for 1 year\n      for (let i = 11; i >= 0; i--) {\n        const date = new Date(endDate);\n        date.setMonth(endDate.getMonth() - i);\n        timestamps.push(date.toISOString().split('T')[0]);\n      }\n      break;\n    case '5Y':\n      // Yearly timestamps for 5 years\n      for (let i = 4; i >= 0; i--) {\n        const date = new Date(endDate);\n        date.setFullYear(endDate.getFullYear() - i);\n        timestamps.push(date.toISOString().split('T')[0]);\n      }\n      break;\n    default:\n      break;\n  }\n  return timestamps;\n};\n\n// Map stock data to the closest available timestamps\nconst mapDataToTimestamps = (data, timestamps) => {\n  const mappedData = timestamps.map(timestamp => {\n    const foundData = data.find(item => item.timestamp === timestamp);\n    return {\n      timestamp,\n      close: foundData ? foundData.close : null // Leave null if no data for the timestamp\n    };\n  });\n  return mappedData;\n};\nconst StockComparison = () => {\n  _s();\n  const [stockData, setStockData] = useState({});\n  const [availableStocks, setAvailableStocks] = useState([]);\n  const [addedStocks, setAddedStocks] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedStock, setSelectedStock] = useState('');\n  const [selectedPeriod, setSelectedPeriod] = useState('1W');\n\n  // Fetch ticker names from the backend\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/tickers').then(response => {\n      setAvailableStocks(response.data);\n      if (response.data.length > 0) {\n        setSelectedStock(response.data[0]); // Set default ticker to the first one\n      }\n    }).catch(error => {\n      console.error('Error fetching tickers', error);\n    });\n  }, []);\n\n  // Fetch stock data from API for a specific stock\n  const fetchStockData = ticker => {\n    axios.get(`http://localhost:5000/api/stock-data/${ticker}`).then(response => {\n      const formattedData = response.data.map(item => ({\n        timestamp: new Date(item.timestamp).toISOString().split('T')[0],\n        // Format timestamp as YYYY-MM-DD\n        open: item.open,\n        close: item.close\n      })).sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n      setStockData(prevState => ({\n        ...prevState,\n        [ticker]: formattedData\n      }));\n    }).catch(error => {\n      console.error('Error fetching stock data', error);\n    });\n  };\n\n  // Handle adding stock from the modal\n  const handleAddStock = () => {\n    if (selectedStock) {\n      setAddedStocks([...addedStocks, selectedStock]);\n      fetchStockData(selectedStock);\n      setAvailableStocks(availableStocks.filter(stock => stock !== selectedStock));\n      setIsModalOpen(false);\n    }\n  };\n\n  // Open and close modal\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n\n  // Handle selecting a stock from the dropdown\n  const handleStockSelection = e => setSelectedStock(e.target.value);\n\n  // Handle period change\n  const handlePeriodChange = period => setSelectedPeriod(period);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Compare Stocks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px 0'\n      },\n      children: periods.map(p => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange(p.value),\n        style: {\n          marginRight: '10px',\n          padding: '10px 20px',\n          backgroundColor: selectedPeriod === p.value ? '#ffc333' : '#161616',\n          cursor: 'pointer'\n        },\n        children: p.label\n      }, p.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      style: {\n        marginBottom: '20px',\n        padding: '10px 20px',\n        backgroundColor: '#161616',\n        color: '#fff',\n        border: 'none',\n        cursor: 'pointer'\n      },\n      children: \"Add Stocks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: modalStyles.overlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyles.modal,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a stock to add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedStock,\n          onChange: handleStockSelection,\n          style: {\n            padding: '10px',\n            width: '100%',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), availableStocks.map(stock => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: stock,\n            children: stock\n          }, stock, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddStock,\n            style: {\n              ...modalStyles.button,\n              backgroundColor: '#161616'\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            style: {\n              ...modalStyles.button,\n              backgroundColor: '#333333'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 500,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        margin: {\n          top: 20,\n          right: 30,\n          left: 0,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          strokeOpacity: \"20%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this),\n          cursor: {\n            fill: \"transparent\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), addedStocks.map((stock, index) => {\n          const timestamps = generateTimestamps(selectedPeriod);\n          const filteredStockData = mapDataToTimestamps(stockData[stock] || [], timestamps); // Map data to timestamps\n          return /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            data: filteredStockData,\n            dataKey: \"close\",\n            name: stock,\n            stroke: lineColors[index % lineColors.length],\n            strokeWidth: 3,\n            activeDot: {\n              r: 8\n            }\n          }, stock, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n\n// Simple modal styles (can be customized)\n_s(StockComparison, \"2sFwwnXOZm+PXHyQY3qGV4EZzAk=\");\n_c = StockComparison;\nconst modalStyles = {\n  overlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  modal: {\n    backgroundColor: '#1f1f1f',\n    padding: '20px',\n    borderRadius: '10px',\n    width: '400px',\n    boxShadow: '0 5px 15px rgba(0, 0, 0, 0.3)',\n    zIndex: 1100\n  },\n  button: {\n    padding: '10px 20px',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    border: 'none',\n    cursor: 'pointer',\n    marginLeft: '10px'\n  }\n};\nexport default StockComparison;\nvar _c;\n$RefreshReg$(_c, \"StockComparison\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","Legend","ResponsiveContainer","CustomTooltip","axios","jsxDEV","_jsxDEV","lineColors","periods","label","value","generateTimestamps","period","endDate","Date","timestamps","i","date","setDate","getDate","push","toISOString","split","setMonth","getMonth","setFullYear","getFullYear","mapDataToTimestamps","data","mappedData","map","timestamp","foundData","find","item","close","StockComparison","_s","stockData","setStockData","availableStocks","setAvailableStocks","addedStocks","setAddedStocks","isModalOpen","setIsModalOpen","selectedStock","setSelectedStock","selectedPeriod","setSelectedPeriod","get","then","response","length","catch","error","console","fetchStockData","ticker","formattedData","open","sort","a","b","prevState","handleAddStock","filter","stock","openModal","closeModal","handleStockSelection","e","target","handlePeriodChange","children","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","p","onClick","marginRight","padding","backgroundColor","cursor","marginBottom","color","border","modalStyles","overlay","modal","onChange","width","disabled","textAlign","button","height","top","right","left","bottom","strokeDasharray","strokeOpacity","dataKey","content","fill","index","filteredStockData","type","name","stroke","strokeWidth","activeDot","r","_c","position","display","justifyContent","alignItems","zIndex","borderRadius","boxShadow","marginLeft","$RefreshReg$"],"sources":["D:/Studies/FYP/Frontend/fyp/src/components/StockComparison.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\r\nimport CustomTooltip from \"./CustomTooltip\";\r\nimport axios from 'axios';\r\n\r\n// Colors array for different stocks\r\nconst lineColors = ['#ffffff', '#ffc333', '#3333ff', '#2aa34d', '#cc33ff', '#33cccc'];\r\n\r\n// Define available periods\r\nconst periods = [\r\n  { label: '1 Week', value: '1W' },\r\n  { label: '1 Month', value: '1M' },\r\n  { label: '1 Year', value: '1Y' },\r\n  { label: '5 Years', value: '5Y' }\r\n];\r\n\r\n// Helper function to generate manual timestamps\r\nconst generateTimestamps = (period) => {\r\n  const endDate = new Date(\"9/18/2024\");\r\n  let timestamps = [];\r\n\r\n  switch (period) {\r\n    case '1W': // Daily timestamps for 1 week\r\n      for (let i = 6; i >= 0; i--) {\r\n        const date = new Date(endDate);\r\n        date.setDate(endDate.getDate() - i);\r\n        timestamps.push(date.toISOString().split('T')[0]); // YYYY-MM-DD format\r\n      }\r\n      break;\r\n    case '1M': // Weekly timestamps for 1 month\r\n      for (let i = 4; i >= 0; i--) {\r\n        const date = new Date(endDate);\r\n        date.setDate(endDate.getDate() - i * 7);\r\n        timestamps.push(date.toISOString().split('T')[0]);\r\n      }\r\n      break;\r\n    case '1Y': // Monthly timestamps for 1 year\r\n      for (let i = 11; i >= 0; i--) {\r\n        const date = new Date(endDate);\r\n        date.setMonth(endDate.getMonth() - i);\r\n        timestamps.push(date.toISOString().split('T')[0]);\r\n      }\r\n      break;\r\n    case '5Y': // Yearly timestamps for 5 years\r\n      for (let i = 4; i >= 0; i--) {\r\n        const date = new Date(endDate);\r\n        date.setFullYear(endDate.getFullYear() - i);\r\n        timestamps.push(date.toISOString().split('T')[0]);\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return timestamps;\r\n};\r\n\r\n// Map stock data to the closest available timestamps\r\nconst mapDataToTimestamps = (data, timestamps) => {\r\n  const mappedData = timestamps.map(timestamp => {\r\n    const foundData = data.find(item => item.timestamp === timestamp);\r\n    return {\r\n      timestamp,\r\n      close: foundData ? foundData.close : null // Leave null if no data for the timestamp\r\n    };\r\n  });\r\n  return mappedData;\r\n};\r\n\r\nconst StockComparison = () => {\r\n  const [stockData, setStockData] = useState({});\r\n  const [availableStocks, setAvailableStocks] = useState([]);\r\n  const [addedStocks, setAddedStocks] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedStock, setSelectedStock] = useState('');\r\n  const [selectedPeriod, setSelectedPeriod] = useState('1W');\r\n\r\n  // Fetch ticker names from the backend\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/tickers')\r\n      .then(response => {\r\n        setAvailableStocks(response.data);\r\n        if (response.data.length > 0) {\r\n          setSelectedStock(response.data[0]); // Set default ticker to the first one\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching tickers', error);\r\n      });\r\n  }, []);\r\n\r\n  // Fetch stock data from API for a specific stock\r\n  const fetchStockData = (ticker) => {\r\n    axios.get(`http://localhost:5000/api/stock-data/${ticker}`)\r\n      .then(response => {\r\n        const formattedData = response.data.map(item => ({\r\n          timestamp: new Date(item.timestamp).toISOString().split('T')[0], // Format timestamp as YYYY-MM-DD\r\n          open: item.open,\r\n          close: item.close,\r\n        })).sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n\r\n        setStockData(prevState => ({\r\n          ...prevState,\r\n          [ticker]: formattedData\r\n        }));\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching stock data', error);\r\n      });\r\n  };\r\n\r\n  // Handle adding stock from the modal\r\n  const handleAddStock = () => {\r\n    if (selectedStock) {\r\n      setAddedStocks([...addedStocks, selectedStock]);\r\n      fetchStockData(selectedStock);\r\n      setAvailableStocks(availableStocks.filter(stock => stock !== selectedStock));\r\n      setIsModalOpen(false);\r\n    }\r\n  };\r\n\r\n  // Open and close modal\r\n  const openModal = () => setIsModalOpen(true);\r\n  const closeModal = () => setIsModalOpen(false);\r\n\r\n  // Handle selecting a stock from the dropdown\r\n  const handleStockSelection = (e) => setSelectedStock(e.target.value);\r\n\r\n  // Handle period change\r\n  const handlePeriodChange = (period) => setSelectedPeriod(period);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Compare Stocks</h2>\r\n\r\n      {/* Time period toggle buttons */}\r\n      <div style={{ margin: '20px 0' }}>\r\n        {periods.map(p => (\r\n          <button\r\n            key={p.value}\r\n            onClick={() => handlePeriodChange(p.value)}\r\n            style={{\r\n              marginRight: '10px',\r\n              padding: '10px 20px',\r\n              backgroundColor: selectedPeriod === p.value ? '#ffc333' : '#161616',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            {p.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Button to open modal to add stocks */}\r\n      <button\r\n        onClick={openModal}\r\n        style={{\r\n          marginBottom: '20px',\r\n          padding: '10px 20px',\r\n          backgroundColor: '#161616',\r\n          color: '#fff',\r\n          border: 'none',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        Add Stocks\r\n      </button>\r\n\r\n      {/* Modal for selecting stocks */}\r\n      {isModalOpen && (\r\n        <div style={modalStyles.overlay}>\r\n          <div style={modalStyles.modal}>\r\n            <h3>Select a stock to add</h3>\r\n            <select\r\n              value={selectedStock}\r\n              onChange={handleStockSelection}\r\n              style={{ padding: '10px', width: '100%', marginBottom: '20px' }}\r\n            >\r\n              <option value=\"\" disabled>Select a stock</option>\r\n              {availableStocks.map(stock => (\r\n                <option key={stock} value={stock}>\r\n                  {stock}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <div style={{ textAlign: 'right' }}>\r\n              <button onClick={handleAddStock} style={{ ...modalStyles.button, backgroundColor: '#161616' }}>Add</button>\r\n              <button onClick={closeModal} style={{ ...modalStyles.button, backgroundColor: '#333333' }}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Stock comparison chart */}\r\n      <ResponsiveContainer width=\"100%\" height={500}>\r\n        <LineChart margin={{ top: 20, right: 30, left: 0, bottom: 5 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" strokeOpacity={\"20%\"}/>\r\n          <XAxis dataKey=\"timestamp\" />\r\n          <YAxis />\r\n          <Tooltip content={<CustomTooltip />} cursor={{ fill: \"transparent\" }} />\r\n          <Legend />\r\n\r\n          {/* Dynamically render lines for each added stock */}\r\n          {addedStocks.map((stock, index) => {\r\n            const timestamps = generateTimestamps(selectedPeriod);\r\n            const filteredStockData = mapDataToTimestamps(stockData[stock] || [], timestamps); // Map data to timestamps\r\n            return (\r\n              <Line\r\n                key={stock}\r\n                type=\"monotone\"\r\n                data={filteredStockData}\r\n                dataKey=\"close\"\r\n                name={stock}\r\n                stroke={lineColors[index % lineColors.length]}\r\n                strokeWidth={3}\r\n                activeDot={{ r: 8 }}\r\n              />\r\n            );\r\n          })}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Simple modal styles (can be customized)\r\nconst modalStyles = {\r\n  overlay: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    zIndex: 1000,\r\n  },\r\n  modal: {\r\n    backgroundColor: '#1f1f1f',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    width: '400px',\r\n    boxShadow: '0 5px 15px rgba(0, 0, 0, 0.3)',\r\n    zIndex: 1100,\r\n  },\r\n  button: {\r\n    padding: '10px 20px',\r\n    backgroundColor: '#007bff',\r\n    color: '#fff',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n    marginLeft: '10px',\r\n  }\r\n};\r\n\r\nexport default StockComparison;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}