{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studies\\\\FYP\\\\Frontend\\\\fyp\\\\src\\\\components\\\\StockChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from \"recharts\";\nimport axios from \"axios\";\nimport { backdropClasses } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-tooltip\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"label\",\n        children: `${label} : ${payload[0].value}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: payload.map(pld => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\",\n            padding: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: pld.color\n            },\n            children: pld.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"gray\"\n            },\n            children: [pld.dataKey, \" drivers\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_c = CustomTooltip;\nconst StockChart = () => {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  const [selectedTicker, setSelectedTicker] = useState(\"\"); // Initially no ticker selected\n  const [tickers, setTickers] = useState([]); // To hold ticker names\n  const [selectedPeriod, setSelectedPeriod] = useState(\"1W\"); // Default period\n\n  // Fetch ticker names from the backend\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/tickers\").then(response => {\n      setTickers(response.data);\n      if (response.data.length > 0) {\n        setSelectedTicker(response.data[0]); // Set default ticker to the first one\n      }\n    }).catch(error => {\n      console.error(\"Error fetching tickers\", error);\n    });\n  }, []);\n\n  // Fetch stock data from API based on selected ticker\n  const fetchStockData = ticker => {\n    axios.get(`http://localhost:5000/api/stock-data/${ticker}`).then(response => {\n      const formattedData = response.data.map(item => ({\n        timestamp: new Date(item.timestamp),\n        open: item.open,\n        close: item.close\n      })).sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n      setStockData(formattedData);\n    }).catch(error => {\n      console.error(\"Error fetching stock data\", error);\n    });\n  };\n  useEffect(() => {\n    if (selectedTicker) {\n      // Fetch data for the selected ticker when it changes\n      fetchStockData(selectedTicker);\n    }\n  }, [selectedTicker]);\n\n  // Filter the data based on the selected time period\n  const filterDataByPeriod = (data, period) => {\n    const now = new Date(\"2024-09-18\");\n    let filteredData = [];\n    switch (period) {\n      case \"1W\":\n        filteredData = data.filter(item => now - item.timestamp <= 7 * 24 * 60 * 60 * 1000);\n        break;\n      case \"1M\":\n        filteredData = data.filter(item => now - item.timestamp <= 30 * 24 * 60 * 60 * 1000);\n        break;\n      case \"1Y\":\n        filteredData = data.filter(item => now - item.timestamp <= 365 * 24 * 60 * 60 * 1000);\n        break;\n      case \"5Y\":\n        filteredData = data.filter(item => now - item.timestamp <= 5 * 365 * 24 * 60 * 60 * 1000);\n        break;\n      default:\n        filteredData = data; // Default to showing all data\n        break;\n    }\n    return filteredData.map(item => ({\n      ...item,\n      timestamp: item.timestamp.toLocaleDateString(\"en-US\")\n    }));\n  };\n\n  // Handle ticker change\n  const handleTickerChange = e => {\n    setSelectedTicker(e.target.value);\n  };\n\n  // Handle time period toggle button click\n  const handlePeriodChange = period => {\n    setSelectedPeriod(period);\n  };\n\n  // Filter the stock data before displaying it based on the selected time period\n  const filteredStockData = filterDataByPeriod(stockData, selectedPeriod);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Stock Data for \", selectedTicker]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"tickerSelect\",\n      children: \"Select Ticker: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"tickerSelect\",\n      value: selectedTicker,\n      onChange: handleTickerChange,\n      children: tickers.map(ticker => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: ticker,\n        children: ticker\n      }, ticker, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"20px 0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange(\"1W\"),\n        style: {\n          marginRight: \"10px\",\n          padding: \"10px 20px\",\n          backgroundColor: selectedPeriod === \"1W\" ? \"#ffc333\" : \"#161616\"\n        },\n        children: \"1 Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange(\"1M\"),\n        style: {\n          marginRight: \"10px\",\n          padding: \"10px 20px\",\n          backgroundColor: selectedPeriod === \"1M\" ? \"#ffc333\" : \"#161616\"\n        },\n        children: \"1 Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange(\"1Y\"),\n        style: {\n          marginRight: \"10px\",\n          padding: \"10px 20px\",\n          backgroundColor: selectedPeriod === \"1Y\" ? \"#ffc333\" : \"#161616\"\n        },\n        children: \"1 Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange(\"5Y\"),\n        style: {\n          padding: \"10px 20px\",\n          backgroundColor: selectedPeriod === \"5Y\" ? \"#ffc333\" : \"#161616\"\n        },\n        children: \"5 Years\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 500,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: filteredStockData,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this),\n          cursor: {\n            fill: \"transparent\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"open\",\n          stroke: \"#ffffff\",\n          strokeWidth: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"close\",\n          stroke: \"#ffc333\",\n          strokeWidth: 3,\n          activeDot: {\n            r: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(StockChart, \"cxqxFkIeHyI+zbybZvJXJLasLQw=\");\n_c2 = StockChart;\nexport default StockChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"StockChart\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","Legend","ResponsiveContainer","axios","backdropClasses","jsxDEV","_jsxDEV","CustomTooltip","active","payload","label","length","className","children","value","fileName","_jsxFileName","lineNumber","columnNumber","map","pld","style","display","padding","color","dataKey","_c","StockChart","_s","stockData","setStockData","selectedTicker","setSelectedTicker","tickers","setTickers","selectedPeriod","setSelectedPeriod","get","then","response","data","catch","error","console","fetchStockData","ticker","formattedData","item","timestamp","Date","open","close","sort","a","b","filterDataByPeriod","period","now","filteredData","filter","toLocaleDateString","handleTickerChange","e","target","handlePeriodChange","filteredStockData","htmlFor","id","onChange","margin","onClick","marginRight","backgroundColor","width","height","top","right","left","bottom","strokeDasharray","content","cursor","fill","type","stroke","strokeWidth","activeDot","r","_c2","$RefreshReg$"],"sources":["D:/Studies/FYP/Frontend/fyp/src/components/StockChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport axios from \"axios\";\r\nimport { backdropClasses } from \"@mui/material\";\r\n\r\nconst CustomTooltip = ({ active, payload, label })  => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div className=\"custom-tooltip\">\r\n        <p className=\"label\">{`${label} : ${payload[0].value}`}</p>\r\n        <div>\r\n          {payload.map((pld) => (\r\n            <div style={{ display: \"inline-block\", padding: 10 }}>\r\n              <div style={{ color: pld.color }}>{pld.value}</div>\r\n              <div style={{ color: \"gray\" }}>{pld.dataKey} drivers</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst StockChart = () => {\r\n  const [stockData, setStockData] = useState([]);\r\n  const [selectedTicker, setSelectedTicker] = useState(\"\"); // Initially no ticker selected\r\n  const [tickers, setTickers] = useState([]); // To hold ticker names\r\n  const [selectedPeriod, setSelectedPeriod] = useState(\"1W\"); // Default period\r\n\r\n  // Fetch ticker names from the backend\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/tickers\")\r\n      .then((response) => {\r\n        setTickers(response.data);\r\n        if (response.data.length > 0) {\r\n          setSelectedTicker(response.data[0]); // Set default ticker to the first one\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching tickers\", error);\r\n      });\r\n  }, []);\r\n\r\n  // Fetch stock data from API based on selected ticker\r\n  const fetchStockData = (ticker) => {\r\n    axios\r\n      .get(`http://localhost:5000/api/stock-data/${ticker}`)\r\n      .then((response) => {\r\n        const formattedData = response.data\r\n          .map((item) => ({\r\n            timestamp: new Date(item.timestamp),\r\n            open: item.open,\r\n            close: item.close,\r\n          }))\r\n          .sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n        setStockData(formattedData);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching stock data\", error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedTicker) {\r\n      // Fetch data for the selected ticker when it changes\r\n      fetchStockData(selectedTicker);\r\n    }\r\n  }, [selectedTicker]);\r\n\r\n  // Filter the data based on the selected time period\r\n  const filterDataByPeriod = (data, period) => {\r\n    const now = new Date(\"2024-09-18\");\r\n    let filteredData = [];\r\n\r\n    switch (period) {\r\n      case \"1W\":\r\n        filteredData = data.filter(\r\n          (item) => now - item.timestamp <= 7 * 24 * 60 * 60 * 1000\r\n        );\r\n        break;\r\n      case \"1M\":\r\n        filteredData = data.filter(\r\n          (item) => now - item.timestamp <= 30 * 24 * 60 * 60 * 1000\r\n        );\r\n        break;\r\n      case \"1Y\":\r\n        filteredData = data.filter(\r\n          (item) => now - item.timestamp <= 365 * 24 * 60 * 60 * 1000\r\n        );\r\n        break;\r\n      case \"5Y\":\r\n        filteredData = data.filter(\r\n          (item) => now - item.timestamp <= 5 * 365 * 24 * 60 * 60 * 1000\r\n        );\r\n        break;\r\n      default:\r\n        filteredData = data; // Default to showing all data\r\n        break;\r\n    }\r\n\r\n    return filteredData.map((item) => ({\r\n      ...item,\r\n      timestamp: item.timestamp.toLocaleDateString(\"en-US\"),\r\n    }));\r\n  };\r\n\r\n  // Handle ticker change\r\n  const handleTickerChange = (e) => {\r\n    setSelectedTicker(e.target.value);\r\n  };\r\n\r\n  // Handle time period toggle button click\r\n  const handlePeriodChange = (period) => {\r\n    setSelectedPeriod(period);\r\n  };\r\n\r\n  // Filter the stock data before displaying it based on the selected time period\r\n  const filteredStockData = filterDataByPeriod(stockData, selectedPeriod);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Stock Data for {selectedTicker}</h2>\r\n\r\n      {/* Dropdown to select ticker */}\r\n      <label htmlFor=\"tickerSelect\">Select Ticker: </label>\r\n      <select\r\n        id=\"tickerSelect\"\r\n        value={selectedTicker}\r\n        onChange={handleTickerChange}\r\n      >\r\n        {tickers.map((ticker) => (\r\n          <option key={ticker} value={ticker}>\r\n            {ticker}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Time period toggle buttons */}\r\n      <div style={{ margin: \"20px 0\" }}>\r\n        <button\r\n          onClick={() => handlePeriodChange(\"1W\")}\r\n          style={{\r\n            marginRight: \"10px\",\r\n            padding: \"10px 20px\",\r\n            backgroundColor: selectedPeriod === \"1W\" ? \"#ffc333\" : \"#161616\",\r\n          }}\r\n        >\r\n          1 Week\r\n        </button>\r\n        <button\r\n          onClick={() => handlePeriodChange(\"1M\")}\r\n          style={{\r\n            marginRight: \"10px\",\r\n            padding: \"10px 20px\",\r\n            backgroundColor: selectedPeriod === \"1M\" ? \"#ffc333\" : \"#161616\",\r\n          }}\r\n        >\r\n          1 Month\r\n        </button>\r\n        <button\r\n          onClick={() => handlePeriodChange(\"1Y\")}\r\n          style={{\r\n            marginRight: \"10px\",\r\n            padding: \"10px 20px\",\r\n            backgroundColor: selectedPeriod === \"1Y\" ? \"#ffc333\" : \"#161616\",\r\n          }}\r\n        >\r\n          1 Year\r\n        </button>\r\n        <button\r\n          onClick={() => handlePeriodChange(\"5Y\")}\r\n          style={{\r\n            padding: \"10px 20px\",\r\n            backgroundColor: selectedPeriod === \"5Y\" ? \"#ffc333\" : \"#161616\",\r\n          }}\r\n        >\r\n          5 Years\r\n        </button>\r\n      </div>\r\n\r\n      {/* Stock chart */}\r\n      <ResponsiveContainer width=\"100%\" height={500}>\r\n        <LineChart\r\n          data={filteredStockData}\r\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"timestamp\" />\r\n          <YAxis />\r\n          <Tooltip content={<CustomTooltip />} cursor={{ fill: \"transparent\" }} />\r\n          <Legend />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"open\"\r\n            stroke=\"#ffffff\"\r\n            strokeWidth={3}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"close\"\r\n            stroke=\"#ffc333\"\r\n            strokeWidth={3}\r\n            activeDot={{ r: 8 }}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}