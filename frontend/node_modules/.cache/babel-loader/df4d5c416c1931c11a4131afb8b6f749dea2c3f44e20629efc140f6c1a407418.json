{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studies\\\\FYP\\\\Frontend\\\\fyp\\\\src\\\\components\\\\StockComparison.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\nimport CustomTooltip from \"./CustomTooltip\";\nimport axios from 'axios';\n\n// Colors array for different stocks\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lineColors = ['#ffffff', '#ffc333', '#3333ff', '#2aa34d', '#cc33ff', '#33cccc'];\n\n// Define available periods\nconst periods = [{\n  label: '1 Week',\n  value: '1W'\n}, {\n  label: '1 Month',\n  value: '1M'\n}, {\n  label: '1 Year',\n  value: '1Y'\n}, {\n  label: '5 Years',\n  value: '5Y'\n}];\n\n// Filter data based on the selected time period\nconst filterDataByPeriod = (data, period) => {\n  const now = new Date(\"2024-09-18\"); // Use the current date as a reference\n  let filteredData = [];\n  switch (period) {\n    case '1W':\n      // Last 1 week\n      filteredData = data.filter(item => now - new Date(item.timestamp) <= 7 * 24 * 60 * 60 * 1000);\n      break;\n    case '1M':\n      // Last 1 month\n      filteredData = data.filter(item => now - new Date(item.timestamp) <= 30 * 24 * 60 * 60 * 1000);\n      break;\n    case '1Y':\n      // Last 1 year\n      filteredData = data.filter(item => now - new Date(item.timestamp) <= 365 * 24 * 60 * 60 * 1000);\n      break;\n    case '5Y':\n      // Last 5 years\n      filteredData = data.filter(item => now - new Date(item.timestamp) <= 5 * 365 * 24 * 60 * 60 * 1000);\n      break;\n    default:\n      filteredData = data; // Default to showing all data\n      break;\n  }\n  return filteredData;\n};\nconst StockComparison = () => {\n  _s();\n  const [stockData, setStockData] = useState({});\n  const [availableStocks, setAvailableStocks] = useState([]);\n  const [addedStocks, setAddedStocks] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedStock, setSelectedStock] = useState('');\n  const [selectedPeriod, setSelectedPeriod] = useState('1W');\n\n  // Fetch ticker names from the backend\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/tickers').then(response => {\n      setAvailableStocks(response.data);\n      if (response.data.length > 0) {\n        setSelectedStock(response.data[0]); // Set default ticker to the first one\n      }\n    }).catch(error => {\n      console.error('Error fetching tickers', error);\n    });\n  }, []);\n\n  // Fetch stock data from API for a specific stock\n  const fetchStockData = ticker => {\n    axios.get(`http://localhost:5000/api/stock-data/${ticker}`).then(response => {\n      const formattedData = response.data.map(item => ({\n        timestamp: new Date(item.timestamp).toLocaleDateString('en-US'),\n        open: item.open,\n        close: item.close\n      })).sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n      setStockData(prevState => ({\n        ...prevState,\n        [ticker]: formattedData\n      }));\n    }).catch(error => {\n      console.error('Error fetching stock data', error);\n    });\n  };\n\n  // Handle adding stock from the modal\n  const handleAddStock = () => {\n    if (selectedStock) {\n      setAddedStocks([...addedStocks, selectedStock]);\n      fetchStockData(selectedStock); // Fetch full data for the stock\n      setAvailableStocks(availableStocks.filter(stock => stock !== selectedStock));\n      setIsModalOpen(false); // Close the modal after adding the stock\n    }\n  };\n\n  // Handle clearing all added stocks\n  const handleClearStocks = () => {\n    setAddedStocks([]); // Clear the added stocks\n  };\n\n  // Get common timestamps and map stock data to these timestamps\n  const getCombinedData = () => {\n    const commonTimestamps = new Set();\n\n    // Get filtered data for each stock\n    const allFilteredData = {};\n    addedStocks.forEach(stock => {\n      const filteredData = filterDataByPeriod(stockData[stock] || [], selectedPeriod);\n      allFilteredData[stock] = filteredData;\n\n      // Collect unique timestamps\n      filteredData.forEach(item => {\n        commonTimestamps.add(item.timestamp);\n      });\n    });\n\n    // Create combined data structure\n    const combinedData = [];\n    commonTimestamps.forEach(timestamp => {\n      const combinedEntry = {\n        timestamp\n      };\n      let hasNullValue = false; // Flag to check for null values\n\n      addedStocks.forEach(stock => {\n        const stockDataForTimestamp = allFilteredData[stock].find(item => item.timestamp === timestamp);\n        const value = stockDataForTimestamp ? stockDataForTimestamp.close : null; // Handle missing data\n        combinedEntry[stock] = value;\n\n        // Check if value is null\n        if (value === null) {\n          hasNullValue = true;\n        }\n      });\n\n      // Only add entry if there are no null values\n      if (!hasNullValue) {\n        combinedData.push(combinedEntry);\n      }\n    });\n    return combinedData;\n  };\n\n  // Open the modal to select a stock\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  // Close the modal without adding a stock\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // Handle selecting a stock from the dropdown in the modal\n  const handleStockSelection = e => {\n    setSelectedStock(e.target.value);\n  };\n\n  // Handle period change\n  const handlePeriodChange = period => {\n    setSelectedPeriod(period);\n  };\n\n  // Stock comparison chart\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Compare Stocks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px 0'\n      },\n      children: periods.map(period => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange(period.value),\n        style: {\n          marginRight: '10px',\n          padding: '10px 20px',\n          backgroundColor: selectedPeriod === period.value ? '#ffc333' : '#161616',\n          cursor: 'pointer'\n        },\n        children: period.label\n      }, period.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '10px',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openModal,\n        style: {\n          padding: '10px 20px',\n          backgroundColor: '#161616',\n          color: '#fff',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        children: \"Add Stocks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearStocks,\n        disabled: addedStocks.length === 0 // Disable button if no stocks are added\n        ,\n        style: {\n          padding: '10px 20px',\n          backgroundColor: addedStocks.length > 0 ? '#cc0000' : '#999',\n          // Change color based on state\n          color: '#fff',\n          border: 'none',\n          cursor: addedStocks.length > 0 ? 'pointer' : 'not-allowed'\n        },\n        children: \"Clear Stocks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: modalStyles.overlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyles.modal,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a stock to add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedStock,\n          onChange: handleStockSelection,\n          style: {\n            padding: '10px',\n            width: '100%',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select Stock --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), availableStocks.map(stock => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: stock,\n            children: stock\n          }, stock, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddStock,\n            style: {\n              ...modalStyles.button,\n              backgroundColor: '#161616'\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            style: {\n              ...modalStyles.button,\n              backgroundColor: '#333333'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this), addedStocks.length > 0 && /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 500,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: getCombinedData(),\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), addedStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(Line, {\n          strokeWidth: 3,\n          type: \"monotone\",\n          dataKey: stock,\n          stroke: lineColors[index % lineColors.length],\n          dot: false,\n          activeDot: {\n            r: 8\n          }\n        }, stock, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n\n// Simple modal styles (can be customized)\n_s(StockComparison, \"2sFwwnXOZm+PXHyQY3qGV4EZzAk=\");\n_c = StockComparison;\nconst modalStyles = {\n  overlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000 // Ensure overlay is on top of the page content\n  },\n  modal: {\n    backgroundColor: '#1f1f1f',\n    padding: '20px',\n    borderRadius: '10px',\n    width: '400px',\n    boxShadow: '0 5px 15px rgba(0, 0, 0, 0.3)',\n    zIndex: 1100,\n    // Ensure modal content is above the overlay\n    position: 'relative' // Ensure proper positioning above the overlay\n  },\n  button: {\n    padding: '10px 20px',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    border: 'none',\n    cursor: 'pointer',\n    marginLeft: '10px'\n  }\n};\nexport default StockComparison;\nvar _c;\n$RefreshReg$(_c, \"StockComparison\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","Legend","ResponsiveContainer","CustomTooltip","axios","jsxDEV","_jsxDEV","lineColors","periods","label","value","filterDataByPeriod","data","period","now","Date","filteredData","filter","item","timestamp","StockComparison","_s","stockData","setStockData","availableStocks","setAvailableStocks","addedStocks","setAddedStocks","isModalOpen","setIsModalOpen","selectedStock","setSelectedStock","selectedPeriod","setSelectedPeriod","get","then","response","length","catch","error","console","fetchStockData","ticker","formattedData","map","toLocaleDateString","open","close","sort","a","b","prevState","handleAddStock","stock","handleClearStocks","getCombinedData","commonTimestamps","Set","allFilteredData","forEach","add","combinedData","combinedEntry","hasNullValue","stockDataForTimestamp","find","push","openModal","closeModal","handleStockSelection","e","target","handlePeriodChange","children","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","onClick","marginRight","padding","backgroundColor","cursor","display","gap","marginBottom","color","border","disabled","modalStyles","overlay","modal","onChange","width","textAlign","button","height","strokeDasharray","dataKey","content","index","strokeWidth","type","stroke","dot","activeDot","r","_c","position","top","left","right","bottom","justifyContent","alignItems","zIndex","borderRadius","boxShadow","marginLeft","$RefreshReg$"],"sources":["D:/Studies/FYP/Frontend/fyp/src/components/StockComparison.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\r\nimport CustomTooltip from \"./CustomTooltip\";\r\nimport axios from 'axios';\r\n\r\n// Colors array for different stocks\r\nconst lineColors = ['#ffffff', '#ffc333', '#3333ff', '#2aa34d', '#cc33ff', '#33cccc'];\r\n\r\n// Define available periods\r\nconst periods = [\r\n  { label: '1 Week', value: '1W' },\r\n  { label: '1 Month', value: '1M' },\r\n  { label: '1 Year', value: '1Y' },\r\n  { label: '5 Years', value: '5Y' }\r\n];\r\n\r\n// Filter data based on the selected time period\r\nconst filterDataByPeriod = (data, period) => {\r\n  const now = new Date(\"2024-09-18\"); // Use the current date as a reference\r\n  let filteredData = [];\r\n\r\n  switch (period) {\r\n    case '1W': // Last 1 week\r\n      filteredData = data.filter(item => (now - new Date(item.timestamp)) <= 7 * 24 * 60 * 60 * 1000);\r\n      break;\r\n    case '1M': // Last 1 month\r\n      filteredData = data.filter(item => (now - new Date(item.timestamp)) <= 30 * 24 * 60 * 60 * 1000);\r\n      break;\r\n    case '1Y': // Last 1 year\r\n      filteredData = data.filter(item => (now - new Date(item.timestamp)) <= 365 * 24 * 60 * 60 * 1000);\r\n      break;\r\n    case '5Y': // Last 5 years\r\n      filteredData = data.filter(item => (now - new Date(item.timestamp)) <= 5 * 365 * 24 * 60 * 60 * 1000);\r\n      break;\r\n    default:\r\n      filteredData = data; // Default to showing all data\r\n      break;\r\n  }\r\n\r\n  return filteredData;\r\n};\r\n\r\nconst StockComparison = () => {\r\n  const [stockData, setStockData] = useState({});\r\n  const [availableStocks, setAvailableStocks] = useState([]);\r\n  const [addedStocks, setAddedStocks] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedStock, setSelectedStock] = useState('');\r\n  const [selectedPeriod, setSelectedPeriod] = useState('1W');\r\n\r\n  // Fetch ticker names from the backend\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/tickers')\r\n      .then(response => {\r\n        setAvailableStocks(response.data);\r\n        if (response.data.length > 0) {\r\n          setSelectedStock(response.data[0]); // Set default ticker to the first one\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching tickers', error);\r\n      });\r\n  }, []);\r\n\r\n  // Fetch stock data from API for a specific stock\r\n  const fetchStockData = (ticker) => {\r\n    axios.get(`http://localhost:5000/api/stock-data/${ticker}`)\r\n      .then(response => {\r\n        const formattedData = response.data.map(item => ({\r\n          timestamp: new Date(item.timestamp).toLocaleDateString('en-US'),\r\n          open: item.open,\r\n          close: item.close,\r\n        })).sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n\r\n        setStockData(prevState => ({\r\n          ...prevState,\r\n          [ticker]: formattedData\r\n        }));\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching stock data', error);\r\n      });\r\n  };\r\n\r\n  // Handle adding stock from the modal\r\n  const handleAddStock = () => {\r\n    if (selectedStock) {\r\n      setAddedStocks([...addedStocks, selectedStock]);\r\n      fetchStockData(selectedStock); // Fetch full data for the stock\r\n      setAvailableStocks(availableStocks.filter(stock => stock !== selectedStock));\r\n      setIsModalOpen(false); // Close the modal after adding the stock\r\n    }\r\n  };\r\n\r\n  // Handle clearing all added stocks\r\n  const handleClearStocks = () => {\r\n    setAddedStocks([]); // Clear the added stocks\r\n  };\r\n\r\n  // Get common timestamps and map stock data to these timestamps\r\n  const getCombinedData = () => {\r\n    const commonTimestamps = new Set();\r\n\r\n    // Get filtered data for each stock\r\n    const allFilteredData = {};\r\n    addedStocks.forEach(stock => {\r\n      const filteredData = filterDataByPeriod(stockData[stock] || [], selectedPeriod);\r\n      allFilteredData[stock] = filteredData;\r\n\r\n      // Collect unique timestamps\r\n      filteredData.forEach(item => {\r\n        commonTimestamps.add(item.timestamp);\r\n      });\r\n    });\r\n\r\n    // Create combined data structure\r\n    const combinedData = [];\r\n    commonTimestamps.forEach(timestamp => {\r\n      const combinedEntry = { timestamp };\r\n      let hasNullValue = false; // Flag to check for null values\r\n\r\n      addedStocks.forEach(stock => {\r\n        const stockDataForTimestamp = allFilteredData[stock].find(item => item.timestamp === timestamp);\r\n        const value = stockDataForTimestamp ? stockDataForTimestamp.close : null; // Handle missing data\r\n        combinedEntry[stock] = value;\r\n\r\n        // Check if value is null\r\n        if (value === null) {\r\n          hasNullValue = true;\r\n        }\r\n      });\r\n\r\n      // Only add entry if there are no null values\r\n      if (!hasNullValue) {\r\n        combinedData.push(combinedEntry);\r\n      }\r\n    });\r\n\r\n    return combinedData;\r\n  };\r\n\r\n  // Open the modal to select a stock\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Close the modal without adding a stock\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  // Handle selecting a stock from the dropdown in the modal\r\n  const handleStockSelection = (e) => {\r\n    setSelectedStock(e.target.value);\r\n  };\r\n\r\n  // Handle period change\r\n  const handlePeriodChange = (period) => {\r\n    setSelectedPeriod(period);\r\n  };\r\n\r\n  // Stock comparison chart\r\n  return (\r\n    <div>\r\n      <h2>Compare Stocks</h2>\r\n\r\n      {/* Toggle buttons to select the period */}\r\n      <div style={{ margin: '20px 0' }}>\r\n        {periods.map(period => (\r\n          <button\r\n            key={period.value}\r\n            onClick={() => handlePeriodChange(period.value)}\r\n            style={{\r\n              marginRight: '10px',\r\n              padding: '10px 20px',\r\n              backgroundColor: selectedPeriod === period.value ? '#ffc333' : '#161616',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            {period.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Buttons to add stocks and clear stocks */}\r\n      <div style={{ display: 'flex', gap: '10px', marginBottom: '20px' }}>\r\n        <button\r\n          onClick={openModal}\r\n          style={{\r\n            padding: '10px 20px',\r\n            backgroundColor: '#161616',\r\n            color: '#fff',\r\n            border: 'none',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          Add Stocks\r\n        </button>\r\n\r\n        <button\r\n          onClick={handleClearStocks}\r\n          disabled={addedStocks.length === 0} // Disable button if no stocks are added\r\n          style={{\r\n            padding: '10px 20px',\r\n            backgroundColor: addedStocks.length > 0 ? '#cc0000' : '#999', // Change color based on state\r\n            color: '#fff',\r\n            border: 'none',\r\n            cursor: addedStocks.length > 0 ? 'pointer' : 'not-allowed',\r\n          }}\r\n        >\r\n          Clear Stocks\r\n        </button>\r\n      </div>\r\n\r\n      {/* Modal for selecting stocks */}\r\n      {isModalOpen && (\r\n        <div style={modalStyles.overlay}>\r\n          <div style={modalStyles.modal}>\r\n            <h3>Select a stock to add</h3>\r\n            <select\r\n              value={selectedStock}\r\n              onChange={handleStockSelection}\r\n              style={{ padding: '10px', width: '100%', marginBottom: '20px' }}\r\n            >\r\n              <option value=\"\">-- Select Stock --</option>\r\n              {availableStocks.map(stock => (\r\n                <option key={stock} value={stock}>{stock}</option>\r\n              ))}\r\n            </select>\r\n            <div style={{ textAlign: 'right' }}>\r\n              <button onClick={handleAddStock} style={{ ...modalStyles.button, backgroundColor: '#161616' }}>Add</button>\r\n              <button onClick={closeModal} style={{ ...modalStyles.button, backgroundColor: '#333333' }}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Render chart */}\r\n      {addedStocks.length > 0 && (\r\n        <ResponsiveContainer width=\"100%\" height={500}>\r\n          <LineChart data={getCombinedData()}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"timestamp\" />\r\n            <YAxis />\r\n            <Tooltip content={<CustomTooltip />} />\r\n            <Legend />\r\n            {addedStocks.map((stock, index) => (\r\n              <Line\r\n                strokeWidth={3}\r\n                key={stock}\r\n                type=\"monotone\"\r\n                dataKey={stock}\r\n                stroke={lineColors[index % lineColors.length]}                \r\n                dot={false}\r\n                activeDot={{ r: 8 }}\r\n              />\r\n            ))}\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Simple modal styles (can be customized)\r\nconst modalStyles = {\r\n  overlay: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    zIndex: 1000,  // Ensure overlay is on top of the page content\r\n  },\r\n  modal: {\r\n    backgroundColor: '#1f1f1f',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    width: '400px',\r\n    boxShadow: '0 5px 15px rgba(0, 0, 0, 0.3)',\r\n    zIndex: 1100,  // Ensure modal content is above the overlay\r\n    position: 'relative', // Ensure proper positioning above the overlay\r\n  },\r\n  button: {\r\n    padding: '10px 20px',\r\n    backgroundColor: '#007bff',\r\n    color: '#fff',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n    marginLeft: '10px',\r\n  }\r\n};\r\n\r\nexport default StockComparison;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}