{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studies\\\\FYP\\\\Frontend\\\\fyp\\\\src\\\\components\\\\Compare.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from \"recharts\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Compare = () => {\n  _s();\n  const [historicalData, setHistoricalData] = useState([]);\n  const [predictedData, setPredictedData] = useState([]);\n  const [selectedTicker, setSelectedTicker] = useState(\"AATM\"); // Default ticker\n  const [tickers, setTickers] = useState([/*'AAL', 'AASM', */\"AATM\" /*, 'ABL', 'ABOT', 'ABSON'*/]); // Example tickers\n\n  useEffect(() => {\n    // Fetch historical price data for a specific ticker\n    const fetchHistoricalData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/stock-data/AATM\"); // Example ticker\n        const historicalPrices = response.data.map(item => ({\n          timestamp: new Date(item.timestamp).toLocaleDateString(\"en-US\"),\n          historicalPrice: item.close // Assuming `close` is the historical price\n        })).sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n        setHistoricalData(historicalPrices);\n      } catch (error) {\n        console.error(\"Error fetching historical data\", error);\n      }\n    };\n\n    // Simulated demo data for predicted stock prices\n    const demoPredictedData = [{\n      timestamp: \"8/1/2024\",\n      predictedPrice: 35.32\n    }, {\n      timestamp: \"8/2/2024\",\n      predictedPrice: 34.75\n    }, {\n      timestamp: \"8/5/2024\",\n      predictedPrice: 42.53\n    }, {\n      timestamp: \"8/6/2024\",\n      predictedPrice: 45.68\n    }, {\n      timestamp: \"8/7/2024\",\n      predictedPrice: 52.25\n    }, {\n      timestamp: \"8/8/2024\",\n      predictedPrice: 46.23\n    }, {\n      timestamp: \"8/9/2024\",\n      predictedPrice: 48.75\n    }, {\n      timestamp: \"8/12/2024\",\n      predictedPrice: 55.73\n    }, {\n      timestamp: \"8/13/2024\",\n      predictedPrice: 61.2\n    }, {\n      timestamp: \"8/15/2024\",\n      predictedPrice: 66.22\n    }, {\n      timestamp: \"8/16/2024\",\n      predictedPrice: 74.2\n    }, {\n      timestamp: \"8/19/2024\",\n      predictedPrice: 76.48\n    }, {\n      timestamp: \"8/20/2024\",\n      predictedPrice: 76.7\n    }, {\n      timestamp: \"8/21/2024\",\n      predictedPrice: 88.37\n    }, {\n      timestamp: \"8/22/2024\",\n      predictedPrice: 93.81\n    }, {\n      timestamp: \"8/23/2024\",\n      predictedPrice: 103.09\n    }, {\n      timestamp: \"8/26/2024\",\n      predictedPrice: 92.88\n    }, {\n      timestamp: \"8/27/2024\",\n      predictedPrice: 83.69\n    }, {\n      timestamp: \"8/28/2024\",\n      predictedPrice: 79.51\n    }, {\n      timestamp: \"8/29/2024\",\n      predictedPrice: 72.02\n    }, {\n      timestamp: \"8/30/2024\",\n      predictedPrice: 72.53\n    }, {\n      timestamp: \"7/3/2024\",\n      predictedPrice: 22.82\n    }, {\n      timestamp: \"7/4/2024\",\n      predictedPrice: 31.32\n    }, {\n      timestamp: \"7/5/2024\",\n      predictedPrice: 35.05\n    }, {\n      timestamp: \"7/8/2024\",\n      predictedPrice: 38.19\n    }, {\n      timestamp: \"7/9/2024\",\n      predictedPrice: 40.63\n    }, {\n      timestamp: \"7/10/2024\",\n      predictedPrice: 43.39\n    }, {\n      timestamp: \"7/11/2024\",\n      predictedPrice: 44.84\n    }, {\n      timestamp: \"7/12/2024\",\n      predictedPrice: 43.0\n    }, {\n      timestamp: \"7/15/2024\",\n      predictedPrice: 39.92\n    }, {\n      timestamp: \"7/18/2024\",\n      predictedPrice: 35.22\n    }, {\n      timestamp: \"7/19/2024\",\n      predictedPrice: 33.41\n    }, {\n      timestamp: \"7/22/2024\",\n      predictedPrice: 30.17\n    }, {\n      timestamp: \"7/23/2024\",\n      predictedPrice: 26.25\n    }, {\n      timestamp: \"7/24/2024\",\n      predictedPrice: 22.74\n    }, {\n      timestamp: \"7/25/2024\",\n      predictedPrice: 21.54\n    }, {\n      timestamp: \"7/26/2024\",\n      predictedPrice: 23.44\n    }, {\n      timestamp: \"7/29/2024\",\n      predictedPrice: 26.78\n    }, {\n      timestamp: \"7/30/2024\",\n      predictedPrice: 28.36\n    }, {\n      timestamp: \"7/31/2024\",\n      predictedPrice: 32.2\n    }, {\n      timestamp: \"9/2/2024\",\n      predictedPrice: 70.82\n    }, {\n      timestamp: \"9/3/2024\",\n      predictedPrice: 68.66\n    }, {\n      timestamp: \"9/4/2024\",\n      predictedPrice: 75.45\n    }, {\n      timestamp: \"9/5/2024\",\n      predictedPrice: 82.64\n    }, {\n      timestamp: \"9/6/2024\",\n      predictedPrice: 75.67\n    }, {\n      timestamp: \"9/9/2024\",\n      predictedPrice: 79.34\n    }, {\n      timestamp: \"9/10/2024\",\n      predictedPrice: 79.54\n    }, {\n      timestamp: \"9/11/2024\",\n      predictedPrice: 74.66\n    }, {\n      timestamp: \"9/12/2024\",\n      predictedPrice: 74.66\n    }, {\n      timestamp: \"9/13/2024\",\n      predictedPrice: 72.16\n    }, {\n      timestamp: \"9/16/2024\",\n      predictedPrice: 73.65\n    }, {\n      timestamp: \"9/18/2024\",\n      predictedPrice: 71.15\n    }, {\n      timestamp: \"9/19/2024\",\n      predictedPrice: 73\n    }, {\n      timestamp: \"9/20/2024\",\n      predictedPrice: 75\n    }, {\n      timestamp: \"9/21/2024\",\n      predictedPrice: 82.15\n    }, {\n      timestamp: \"9/22/2024\",\n      predictedPrice: 78.65\n    }, {\n      timestamp: \"9/23/2024\",\n      predictedPrice: 82.12\n    }];\n    setPredictedData(demoPredictedData);\n    fetchHistoricalData(); // Fetch historical data on component mount\n  }, []);\n\n  // Combine historical and predicted data into one array for charting\n  const combinedData = historicalData.map(histItem => {\n    const predictedItem = predictedData.find(predItem => predItem.timestamp === histItem.timestamp);\n    return {\n      timestamp: histItem.timestamp,\n      historicalPrice: histItem.historicalPrice,\n      predictedPrice: predictedItem ? predictedItem.predictedPrice : null\n    };\n  }).concat(predictedData.filter(predItem => !historicalData.find(histItem => histItem.timestamp === predItem.timestamp)));\n\n  // Handle dropdown change\n  const handleTickerChange = e => {\n    setSelectedTicker(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Comparison of Predicted and Historical Stock Prices for \", selectedTicker]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"tickerSelect\",\n      children: \"Select Ticker: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"tickerSelect\",\n      value: selectedTicker,\n      onChange: handleTickerChange,\n      children: tickers.map(ticker => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: ticker,\n        children: ticker\n      }, ticker, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: combinedData,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"historicalPrice\",\n          stroke: \"#8884d8\",\n          name: \"Historical Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"predictedPrice\",\n          stroke: \"#82ca9d\",\n          name: \"Predicted Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(Compare, \"A80bckI3w71lNNXrLRBkfz9R1oA=\");\n_c = Compare;\nexport default Compare;\nvar _c;\n$RefreshReg$(_c, \"Compare\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","Legend","ResponsiveContainer","axios","jsxDEV","_jsxDEV","Compare","_s","historicalData","setHistoricalData","predictedData","setPredictedData","selectedTicker","setSelectedTicker","tickers","setTickers","fetchHistoricalData","response","get","historicalPrices","data","map","item","timestamp","Date","toLocaleDateString","historicalPrice","close","sort","a","b","error","console","demoPredictedData","predictedPrice","combinedData","histItem","predictedItem","find","predItem","concat","filter","handleTickerChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","ticker","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","name","_c","$RefreshReg$"],"sources":["D:/Studies/FYP/Frontend/fyp/src/components/Compare.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport axios from \"axios\";\r\n\r\nconst Compare = () => {\r\n  const [historicalData, setHistoricalData] = useState([]);\r\n  const [predictedData, setPredictedData] = useState([]);\r\n  const [selectedTicker, setSelectedTicker] = useState(\"AATM\"); // Default ticker\r\n  const [tickers, setTickers] = useState([\r\n    /*'AAL', 'AASM', */ \"AATM\" /*, 'ABL', 'ABOT', 'ABSON'*/,\r\n  ]); // Example tickers\r\n\r\n  useEffect(() => {\r\n    // Fetch historical price data for a specific ticker\r\n    const fetchHistoricalData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:5000/api/stock-data/AATM\"\r\n        ); // Example ticker\r\n        const historicalPrices = response.data\r\n          .map((item) => ({\r\n            timestamp: new Date(item.timestamp).toLocaleDateString(\"en-US\"),\r\n            historicalPrice: item.close, // Assuming `close` is the historical price\r\n          }))\r\n          .sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n\r\n        setHistoricalData(historicalPrices);\r\n      } catch (error) {\r\n        console.error(\"Error fetching historical data\", error);\r\n      }\r\n    };\r\n\r\n    // Simulated demo data for predicted stock prices\r\n    const demoPredictedData = [\r\n      { timestamp: \"8/1/2024\", predictedPrice: 35.32 },\r\n      { timestamp: \"8/2/2024\", predictedPrice: 34.75 },\r\n      { timestamp: \"8/5/2024\", predictedPrice: 42.53 },\r\n      { timestamp: \"8/6/2024\", predictedPrice: 45.68 },\r\n      { timestamp: \"8/7/2024\", predictedPrice: 52.25 },\r\n      { timestamp: \"8/8/2024\", predictedPrice: 46.23 },\r\n      { timestamp: \"8/9/2024\", predictedPrice: 48.75 },\r\n      { timestamp: \"8/12/2024\", predictedPrice: 55.73 },\r\n      { timestamp: \"8/13/2024\", predictedPrice: 61.2 },\r\n      { timestamp: \"8/15/2024\", predictedPrice: 66.22 },\r\n      { timestamp: \"8/16/2024\", predictedPrice: 74.2 },\r\n      { timestamp: \"8/19/2024\", predictedPrice: 76.48 },\r\n      { timestamp: \"8/20/2024\", predictedPrice: 76.7 },\r\n      { timestamp: \"8/21/2024\", predictedPrice: 88.37 },\r\n      { timestamp: \"8/22/2024\", predictedPrice: 93.81 },\r\n      { timestamp: \"8/23/2024\", predictedPrice: 103.09 },\r\n      { timestamp: \"8/26/2024\", predictedPrice: 92.88 },\r\n      { timestamp: \"8/27/2024\", predictedPrice: 83.69 },\r\n      { timestamp: \"8/28/2024\", predictedPrice: 79.51 },\r\n      { timestamp: \"8/29/2024\", predictedPrice: 72.02 },\r\n      { timestamp: \"8/30/2024\", predictedPrice: 72.53 },\r\n      { timestamp: \"7/3/2024\", predictedPrice: 22.82 },\r\n      { timestamp: \"7/4/2024\", predictedPrice: 31.32 },\r\n      { timestamp: \"7/5/2024\", predictedPrice: 35.05 },\r\n      { timestamp: \"7/8/2024\", predictedPrice: 38.19 },\r\n      { timestamp: \"7/9/2024\", predictedPrice: 40.63 },\r\n      { timestamp: \"7/10/2024\", predictedPrice: 43.39 },\r\n      { timestamp: \"7/11/2024\", predictedPrice: 44.84 },\r\n      { timestamp: \"7/12/2024\", predictedPrice: 43.0 },\r\n      { timestamp: \"7/15/2024\", predictedPrice: 39.92 },\r\n      { timestamp: \"7/18/2024\", predictedPrice: 35.22 },\r\n      { timestamp: \"7/19/2024\", predictedPrice: 33.41 },\r\n      { timestamp: \"7/22/2024\", predictedPrice: 30.17 },\r\n      { timestamp: \"7/23/2024\", predictedPrice: 26.25 },\r\n      { timestamp: \"7/24/2024\", predictedPrice: 22.74 },\r\n      { timestamp: \"7/25/2024\", predictedPrice: 21.54 },\r\n      { timestamp: \"7/26/2024\", predictedPrice: 23.44 },\r\n      { timestamp: \"7/29/2024\", predictedPrice: 26.78 },\r\n      { timestamp: \"7/30/2024\", predictedPrice: 28.36 },\r\n      { timestamp: \"7/31/2024\", predictedPrice: 32.2 },\r\n      { timestamp: \"9/2/2024\", predictedPrice: 70.82 },\r\n      { timestamp: \"9/3/2024\", predictedPrice: 68.66 },\r\n      { timestamp: \"9/4/2024\", predictedPrice: 75.45 },\r\n      { timestamp: \"9/5/2024\", predictedPrice: 82.64 },\r\n      { timestamp: \"9/6/2024\", predictedPrice: 75.67 },\r\n      { timestamp: \"9/9/2024\", predictedPrice: 79.34 },\r\n      { timestamp: \"9/10/2024\", predictedPrice: 79.54 },\r\n      { timestamp: \"9/11/2024\", predictedPrice: 74.66 },\r\n      { timestamp: \"9/12/2024\", predictedPrice: 74.66 },\r\n      { timestamp: \"9/13/2024\", predictedPrice: 72.16 },\r\n      { timestamp: \"9/16/2024\", predictedPrice: 73.65 },\r\n      { timestamp: \"9/18/2024\", predictedPrice: 71.15 },\r\n      { timestamp: \"9/19/2024\", predictedPrice: 73 },\r\n      { timestamp: \"9/20/2024\", predictedPrice: 75 },\r\n      { timestamp: \"9/21/2024\", predictedPrice: 82.15 },\r\n      { timestamp: \"9/22/2024\", predictedPrice: 78.65 },\r\n      { timestamp: \"9/23/2024\", predictedPrice: 82.12 },\r\n    ];\r\n\r\n    setPredictedData(demoPredictedData);\r\n    fetchHistoricalData(); // Fetch historical data on component mount\r\n  }, []);\r\n\r\n  // Combine historical and predicted data into one array for charting\r\n  const combinedData = historicalData\r\n    .map((histItem) => {\r\n      const predictedItem = predictedData.find(\r\n        (predItem) => predItem.timestamp === histItem.timestamp\r\n      );\r\n      return {\r\n        timestamp: histItem.timestamp,\r\n        historicalPrice: histItem.historicalPrice,\r\n        predictedPrice: predictedItem ? predictedItem.predictedPrice : null,\r\n      };\r\n    })\r\n    .concat(\r\n      predictedData.filter(\r\n        (predItem) =>\r\n          !historicalData.find(\r\n            (histItem) => histItem.timestamp === predItem.timestamp\r\n          )\r\n      )\r\n    );\r\n\r\n  // Handle dropdown change\r\n  const handleTickerChange = (e) => {\r\n    setSelectedTicker(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Comparison of Predicted and Historical Stock Prices for {selectedTicker}</h2>\r\n\r\n      {/* Dropdown to select ticker */}\r\n      <label htmlFor=\"tickerSelect\">Select Ticker: </label>\r\n      <select\r\n        id=\"tickerSelect\"\r\n        value={selectedTicker}\r\n        onChange={handleTickerChange}\r\n      >\r\n        {tickers.map((ticker) => (\r\n          <option key={ticker} value={ticker}>\r\n            {ticker}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Stock predictions chart */}\r\n      <ResponsiveContainer width=\"100%\" height={400}>\r\n        <LineChart\r\n          data={combinedData}\r\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"timestamp\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"historicalPrice\"\r\n            stroke=\"#8884d8\"\r\n            name=\"Historical Price\"\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"predictedPrice\"\r\n            stroke=\"#82ca9d\"\r\n            name=\"Predicted Price\"\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Compare;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}