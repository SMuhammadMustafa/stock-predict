{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studies\\\\FYP\\\\Frontend\\\\fyp\\\\src\\\\components\\\\MarketSentiment.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarketSentiment = () => {\n  _s();\n  const [sentimentValue, setSentimentValue] = useState(0);\n  useEffect(() => {\n    // Simulated demo data for market sentiment\n    const demoSentimentValue = 75; // Example sentiment value (between 0 and 100)\n    setSentimentValue(demoSentimentValue);\n  }, []);\n\n  // Function to get the color based on sentiment\n  const getColor = value => {\n    if (value <= 30) return '#ff4d4d'; // Red for bad sentiment\n    if (value <= 70) return '#ffcc00'; // Yellow for neutral sentiment\n    return '#33cc33'; // Green for good sentiment\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      textAlign: 'center',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Market Sentiment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        height: '30px',\n        backgroundColor: '#e0e0e0',\n        // Light gray background\n        borderRadius: '5px',\n        overflow: 'hidden',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: `${sentimentValue}%`,\n          // Set width according to sentiment value\n          height: '100%',\n          backgroundColor: getColor(sentimentValue),\n          transition: 'width 0.5s ease' // Smooth transition\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          top: '50%',\n          transform: 'translate(-50%, -50%)',\n          color: '#000',\n          fontWeight: 'bold'\n        },\n        children: [sentimentValue, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(MarketSentiment, \"z/+XCxx03T02TexlmjuYJrf8YEs=\");\n_c = MarketSentiment;\nexport default MarketSentiment;\nvar _c;\n$RefreshReg$(_c, \"MarketSentiment\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","jsxDEV","_jsxDEV","MarketSentiment","_s","sentimentValue","setSentimentValue","demoSentimentValue","getColor","value","sx","width","textAlign","padding","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","height","backgroundColor","borderRadius","overflow","position","transition","left","transform","top","color","fontWeight","_c","$RefreshReg$"],"sources":["D:/Studies/FYP/Frontend/fyp/src/components/MarketSentiment.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, Typography } from '@mui/material';\r\n\r\nconst MarketSentiment = () => {\r\n  const [sentimentValue, setSentimentValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Simulated demo data for market sentiment\r\n    const demoSentimentValue = 75; // Example sentiment value (between 0 and 100)\r\n    setSentimentValue(demoSentimentValue);\r\n  }, []);\r\n\r\n  // Function to get the color based on sentiment\r\n  const getColor = (value) => {\r\n    if (value <= 30) return '#ff4d4d'; // Red for bad sentiment\r\n    if (value <= 70) return '#ffcc00'; // Yellow for neutral sentiment\r\n    return '#33cc33'; // Green for good sentiment\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', textAlign: 'center', padding: '20px' }}>\r\n      <Typography variant=\"h6\">Market Sentiment</Typography>\r\n      <Box\r\n        sx={{\r\n          width: '100%',\r\n          height: '30px',\r\n          backgroundColor: '#e0e0e0', // Light gray background\r\n          borderRadius: '5px',\r\n          overflow: 'hidden',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: `${sentimentValue}%`, // Set width according to sentiment value\r\n            height: '100%',\r\n            backgroundColor: getColor(sentimentValue),\r\n            transition: 'width 0.5s ease', // Smooth transition\r\n          }}\r\n        />\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            left: '50%',\r\n            transform: 'translateX(-50%)',\r\n            top: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            color: '#000',\r\n            fontWeight: 'bold',\r\n          }}\r\n        >\r\n          {sentimentValue}%\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MarketSentiment;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,kBAAkB,GAAG,EAAE,CAAC,CAAC;IAC/BD,iBAAiB,CAACC,kBAAkB,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IAC1B,IAAIA,KAAK,IAAI,EAAE,EAAE,OAAO,SAAS,CAAC,CAAC;IACnC,IAAIA,KAAK,IAAI,EAAE,EAAE,OAAO,SAAS,CAAC,CAAC;IACnC,OAAO,SAAS,CAAC,CAAC;EACpB,CAAC;EAED,oBACEP,OAAA,CAACH,GAAG;IAACW,EAAE,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,SAAS,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC/DZ,OAAA,CAACF,UAAU;MAACe,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACtDjB,OAAA,CAACH,GAAG;MACFW,EAAE,EAAE;QACFC,KAAK,EAAE,MAAM;QACbS,MAAM,EAAE,MAAM;QACdC,eAAe,EAAE,SAAS;QAAE;QAC5BC,YAAY,EAAE,KAAK;QACnBC,QAAQ,EAAE,QAAQ;QAClBC,QAAQ,EAAE;MACZ,CAAE;MAAAV,QAAA,gBAEFZ,OAAA,CAACH,GAAG;QACFW,EAAE,EAAE;UACFC,KAAK,EAAE,GAAGN,cAAc,GAAG;UAAE;UAC7Be,MAAM,EAAE,MAAM;UACdC,eAAe,EAAEb,QAAQ,CAACH,cAAc,CAAC;UACzCoB,UAAU,EAAE,iBAAiB,CAAE;QACjC;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFjB,OAAA,CAACH,GAAG;QACFW,EAAE,EAAE;UACFc,QAAQ,EAAE,UAAU;UACpBE,IAAI,EAAE,KAAK;UACXC,SAAS,EAAE,kBAAkB;UAC7BC,GAAG,EAAE,KAAK;UACVD,SAAS,EAAE,uBAAuB;UAClCE,KAAK,EAAE,MAAM;UACbC,UAAU,EAAE;QACd,CAAE;QAAAhB,QAAA,GAEDT,cAAc,EAAC,GAClB;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CArDID,eAAe;AAAA4B,EAAA,GAAf5B,eAAe;AAuDrB,eAAeA,eAAe;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}