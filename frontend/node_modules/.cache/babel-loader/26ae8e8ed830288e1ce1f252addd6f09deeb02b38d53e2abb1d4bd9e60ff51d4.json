{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studies\\\\FYP\\\\Frontend\\\\fyp\\\\src\\\\components\\\\StockIndicators.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockChart = () => {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  const [selectedTicker, setSelectedTicker] = useState('AATM'); // Default ticker\n  const [selectedIndicator, setSelectedIndicator] = useState('SMA'); // Default indicator\n  const [tickers, setTickers] = useState(['AAL', 'AASM', 'AATM', 'ABL', 'ABOT', 'ABSON']); // Example tickers\n  const [indicators, setIndicators] = useState(['SMA', 'EMA', 'RSI']); // Available indicators\n\n  // Fetch stock indicator data from the backend\n  const fetchIndicatorData = (ticker, indicator) => {\n    axios.get(`http://localhost:5000/api/stock-indicators/${ticker}/${indicator}`).then(response => {\n      const formattedData = response.data.map(item => ({\n        timestamp: new Date(item.timestamp).toLocaleDateString('en-US'),\n        value: item[indicator] // Dynamically set the indicator value\n      }));\n      setStockData(formattedData);\n    }).catch(error => {\n      console.error('Error fetching indicator data', error);\n    });\n  };\n  useEffect(() => {\n    // Fetch data for the default selected ticker and indicator when the component mounts\n    fetchIndicatorData(selectedTicker, selectedIndicator);\n  }, [selectedTicker, selectedIndicator]);\n\n  // Handle ticker dropdown change\n  const handleTickerChange = e => {\n    setSelectedTicker(e.target.value);\n  };\n\n  // Handle indicator dropdown change\n  const handleIndicatorChange = e => {\n    setSelectedIndicator(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Stock Indicator for \", selectedTicker, \": \", selectedIndicator]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"tickerSelect\",\n      children: \"Select Ticker: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"tickerSelect\",\n      value: selectedTicker,\n      onChange: handleTickerChange,\n      children: tickers.map(ticker => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: ticker,\n        children: ticker\n      }, ticker, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"indicatorSelect\",\n      style: {\n        marginLeft: '20px'\n      },\n      children: \"Select Indicator: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"indicatorSelect\",\n      value: selectedIndicator,\n      onChange: handleIndicatorChange,\n      children: indicators.map(indicator => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: indicator,\n        children: indicator\n      }, indicator, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: stockData,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"value\",\n          stroke: \"#8884d8\",\n          activeDot: {\n            r: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(StockChart, \"Uu58p+VX7Ei8+p3mHS/jPqIDNds=\");\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","Legend","ResponsiveContainer","axios","jsxDEV","_jsxDEV","StockChart","_s","stockData","setStockData","selectedTicker","setSelectedTicker","selectedIndicator","setSelectedIndicator","tickers","setTickers","indicators","setIndicators","fetchIndicatorData","ticker","indicator","get","then","response","formattedData","data","map","item","timestamp","Date","toLocaleDateString","value","catch","error","console","handleTickerChange","e","target","handleIndicatorChange","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","style","marginLeft","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","activeDot","r","_c","$RefreshReg$"],"sources":["D:/Studies/FYP/Frontend/fyp/src/components/StockIndicators.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\r\nimport axios from 'axios';\r\n\r\nconst StockChart = () => {\r\n  const [stockData, setStockData] = useState([]);\r\n  const [selectedTicker, setSelectedTicker] = useState('AATM'); // Default ticker\r\n  const [selectedIndicator, setSelectedIndicator] = useState('SMA'); // Default indicator\r\n  const [tickers, setTickers] = useState(['AAL', 'AASM', 'AATM', 'ABL', 'ABOT', 'ABSON']); // Example tickers\r\n  const [indicators, setIndicators] = useState(['SMA', 'EMA', 'RSI']); // Available indicators\r\n\r\n  // Fetch stock indicator data from the backend\r\n  const fetchIndicatorData = (ticker, indicator) => {\r\n    axios.get(`http://localhost:5000/api/stock-indicators/${ticker}/${indicator}`)\r\n      .then(response => {\r\n        const formattedData = response.data.map(item => ({\r\n          timestamp: new Date(item.timestamp).toLocaleDateString('en-US'),\r\n          value: item[indicator], // Dynamically set the indicator value\r\n        }));\r\n        setStockData(formattedData);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching indicator data', error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch data for the default selected ticker and indicator when the component mounts\r\n    fetchIndicatorData(selectedTicker, selectedIndicator);\r\n  }, [selectedTicker, selectedIndicator]);\r\n\r\n  // Handle ticker dropdown change\r\n  const handleTickerChange = (e) => {\r\n    setSelectedTicker(e.target.value);\r\n  };\r\n\r\n  // Handle indicator dropdown change\r\n  const handleIndicatorChange = (e) => {\r\n    setSelectedIndicator(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Stock Indicator for {selectedTicker}: {selectedIndicator}</h2>\r\n      \r\n      {/* Dropdown to select ticker */}\r\n      <label htmlFor=\"tickerSelect\">Select Ticker: </label>\r\n      <select id=\"tickerSelect\" value={selectedTicker} onChange={handleTickerChange}>\r\n        {tickers.map(ticker => (\r\n          <option key={ticker} value={ticker}>\r\n            {ticker}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Dropdown to select indicator */}\r\n      <label htmlFor=\"indicatorSelect\" style={{ marginLeft: '20px' }}>Select Indicator: </label>\r\n      <select id=\"indicatorSelect\" value={selectedIndicator} onChange={handleIndicatorChange}>\r\n        {indicators.map(indicator => (\r\n          <option key={indicator} value={indicator}>\r\n            {indicator}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Stock chart */}\r\n      <ResponsiveContainer width=\"100%\" height={400}>\r\n        <LineChart data={stockData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"timestamp\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}