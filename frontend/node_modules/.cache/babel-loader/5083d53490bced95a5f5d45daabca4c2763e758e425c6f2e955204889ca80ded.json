{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studies\\\\FYP\\\\Frontend\\\\fyp\\\\src\\\\components\\\\MarketSentiment.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarketSentiment = () => {\n  _s();\n  const [sentimentValue, setSentimentValue] = useState(0);\n  const [selectedTicker, setSelectedTicker] = useState(\"AATM\"); // Default ticker\n\n  useEffect(() => {\n    // Simulated demo data for market sentiment\n    const demoSentimentValue = 75; // Example sentiment value (between 0 and 100)\n    setSentimentValue(demoSentimentValue);\n  }, []);\n\n  // Function to get the color based on sentiment\n  const getColor = value => {\n    if (value <= 30) return \"#ff4d4d\"; // Red for bad sentiment\n    if (value <= 70) return \"#ffcc00\"; // Yellow for neutral sentiment\n    return \"#33cc33\"; // Green for good sentiment\n  };\n\n  // Handle dropdown change\n  const handleTickerChange = e => {\n    setSelectedTicker(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Market Sentiment for \", selectedTicker]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"tickerSelect\",\n      children: \"Select Ticker: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"tickerSelect\",\n      value: selectedTicker,\n      onChange: handleTickerChange,\n      children: tickers.map(ticker => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: ticker,\n        children: ticker\n      }, ticker, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: \"100%\",\n        textAlign: \"center\",\n        padding: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Market Sentiment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\",\n          height: \"30px\",\n          backgroundColor: \"#e0e0e0\",\n          // Light gray background\n          borderRadius: \"5px\",\n          overflow: \"hidden\",\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: `${sentimentValue}%`,\n            // Set width according to sentiment value\n            height: \"100%\",\n            backgroundColor: getColor(sentimentValue),\n            transition: \"width 0.5s ease\" // Smooth transition\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: \"absolute\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            color: \"#000\",\n            fontWeight: \"bold\"\n          },\n          children: [sentimentValue, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(MarketSentiment, \"bd4ACE/B+xOeuJfIOl2x5hsejQ0=\");\n_c = MarketSentiment;\nexport default MarketSentiment;\nvar _c;\n$RefreshReg$(_c, \"MarketSentiment\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","jsxDEV","_jsxDEV","MarketSentiment","_s","sentimentValue","setSentimentValue","selectedTicker","setSelectedTicker","demoSentimentValue","getColor","value","handleTickerChange","e","target","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","tickers","map","ticker","sx","width","textAlign","padding","variant","height","backgroundColor","borderRadius","overflow","position","transition","left","transform","top","color","fontWeight","_c","$RefreshReg$"],"sources":["D:/Studies/FYP/Frontend/fyp/src/components/MarketSentiment.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\n\r\nconst MarketSentiment = () => {\r\n  const [sentimentValue, setSentimentValue] = useState(0);\r\n  const [selectedTicker, setSelectedTicker] = useState(\"AATM\"); // Default ticker\r\n\r\n  useEffect(() => {\r\n    // Simulated demo data for market sentiment\r\n    const demoSentimentValue = 75; // Example sentiment value (between 0 and 100)\r\n    setSentimentValue(demoSentimentValue);\r\n  }, []);\r\n\r\n  // Function to get the color based on sentiment\r\n  const getColor = (value) => {\r\n    if (value <= 30) return \"#ff4d4d\"; // Red for bad sentiment\r\n    if (value <= 70) return \"#ffcc00\"; // Yellow for neutral sentiment\r\n    return \"#33cc33\"; // Green for good sentiment\r\n  };\r\n\r\n  // Handle dropdown change\r\n  const handleTickerChange = (e) => {\r\n    setSelectedTicker(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Market Sentiment for {selectedTicker}</h2>\r\n      {/* Dropdown to select ticker */}\r\n      <label htmlFor=\"tickerSelect\">Select Ticker: </label>\r\n      <select\r\n        id=\"tickerSelect\"\r\n        value={selectedTicker}\r\n        onChange={handleTickerChange}\r\n      >\r\n        {tickers.map((ticker) => (\r\n          <option key={ticker} value={ticker}>\r\n            {ticker}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <Box sx={{ width: \"100%\", textAlign: \"center\", padding: \"20px\" }}>\r\n        <Typography variant=\"h6\">Market Sentiment</Typography>\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n            height: \"30px\",\r\n            backgroundColor: \"#e0e0e0\", // Light gray background\r\n            borderRadius: \"5px\",\r\n            overflow: \"hidden\",\r\n            position: \"relative\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              width: `${sentimentValue}%`, // Set width according to sentiment value\r\n              height: \"100%\",\r\n              backgroundColor: getColor(sentimentValue),\r\n              transition: \"width 0.5s ease\", // Smooth transition\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              position: \"absolute\",\r\n              left: \"50%\",\r\n              transform: \"translateX(-50%)\",\r\n              top: \"50%\",\r\n              transform: \"translate(-50%, -50%)\",\r\n              color: \"#000\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            {sentimentValue}%\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketSentiment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}