{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studies\\\\FYP\\\\Frontend\\\\fyp\\\\src\\\\components\\\\StockComparison.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\nimport axios from 'axios';\n\n// Colors array for different stocks\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lineColors = ['#ff3333', '#33ff33', '#3333ff', '#ffcc33', '#cc33ff', '#33cccc'];\nconst StockComparison = () => {\n  _s();\n  const [stockData, setStockData] = useState({});\n  const [availableStocks, setAvailableStocks] = useState(['AAL', 'AASM', 'AATM', 'ABL', 'ABOT', 'ABSON']); // Example tickers\n  const [addedStocks, setAddedStocks] = useState([]);\n\n  // Fetch stock data from API for a specific stock\n  const fetchStockData = ticker => {\n    axios.get(`http://localhost:5000/api/stock-data/${ticker}`).then(response => {\n      const formattedData = response.data.map(item => ({\n        timestamp: new Date(item.timestamp).toLocaleDateString('en-US'),\n        open: item.open,\n        close: item.close\n      })).sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n      setStockData(prevState => ({\n        ...prevState,\n        [ticker]: formattedData\n      }));\n    }).catch(error => {\n      console.error('Error fetching stock data', error);\n    });\n  };\n\n  // Add a stock to the comparison\n  const handleAddStock = ticker => {\n    setAddedStocks([...addedStocks, ticker]);\n    fetchStockData(ticker);\n    setAvailableStocks(availableStocks.filter(stock => stock !== ticker));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Compare Stocks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: availableStocks.map(stock => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddStock(stock),\n        style: {\n          marginRight: '10px',\n          padding: '10px 20px',\n          backgroundColor: '#f0f0f0',\n          border: '1px solid #ccc',\n          cursor: 'pointer'\n        },\n        children: [\"Add \", stock]\n      }, stock, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), addedStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          data: stockData[stock],\n          dataKey: \"close\" // You can also compare on 'open' or other properties\n          ,\n          name: stock,\n          stroke: lineColors[index % lineColors.length] // Assign a unique color\n          ,\n          strokeWidth: 3,\n          activeDot: {\n            r: 8\n          }\n        }, stock, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(StockComparison, \"ncGjPbpJ2yf58mE253JYu52MlDc=\");\n_c = StockComparison;\nexport default StockComparison;\nvar _c;\n$RefreshReg$(_c, \"StockComparison\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","Legend","ResponsiveContainer","axios","jsxDEV","_jsxDEV","lineColors","StockComparison","_s","stockData","setStockData","availableStocks","setAvailableStocks","addedStocks","setAddedStocks","fetchStockData","ticker","get","then","response","formattedData","data","map","item","timestamp","Date","toLocaleDateString","open","close","sort","a","b","prevState","catch","error","console","handleAddStock","filter","stock","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","onClick","marginRight","padding","backgroundColor","border","cursor","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","index","type","name","stroke","length","strokeWidth","activeDot","r","_c","$RefreshReg$"],"sources":["D:/Studies/FYP/Frontend/fyp/src/components/StockComparison.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\r\nimport axios from 'axios';\r\n\r\n// Colors array for different stocks\r\nconst lineColors = ['#ff3333', '#33ff33', '#3333ff', '#ffcc33', '#cc33ff', '#33cccc'];\r\n\r\nconst StockComparison = () => {\r\n  const [stockData, setStockData] = useState({});\r\n  const [availableStocks, setAvailableStocks] = useState(['AAL', 'AASM', 'AATM', 'ABL', 'ABOT', 'ABSON']); // Example tickers\r\n  const [addedStocks, setAddedStocks] = useState([]);\r\n\r\n  // Fetch stock data from API for a specific stock\r\n  const fetchStockData = (ticker) => {\r\n    axios.get(`http://localhost:5000/api/stock-data/${ticker}`)\r\n      .then(response => {\r\n        const formattedData = response.data.map(item => ({\r\n          timestamp: new Date(item.timestamp).toLocaleDateString('en-US'),\r\n          open: item.open,\r\n          close: item.close,\r\n        })).sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n\r\n        setStockData(prevState => ({\r\n          ...prevState,\r\n          [ticker]: formattedData\r\n        }));\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching stock data', error);\r\n      });\r\n  };\r\n\r\n  // Add a stock to the comparison\r\n  const handleAddStock = (ticker) => {\r\n    setAddedStocks([...addedStocks, ticker]);\r\n    fetchStockData(ticker);\r\n    setAvailableStocks(availableStocks.filter(stock => stock !== ticker));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Compare Stocks</h2>\r\n      \r\n      {/* Button to select available stocks */}\r\n      <div style={{ marginBottom: '20px' }}>\r\n        {availableStocks.map(stock => (\r\n          <button\r\n            key={stock}\r\n            onClick={() => handleAddStock(stock)}\r\n            style={{\r\n              marginRight: '10px',\r\n              padding: '10px 20px',\r\n              backgroundColor: '#f0f0f0',\r\n              border: '1px solid #ccc',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            Add {stock}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Stock comparison chart */}\r\n      <ResponsiveContainer width=\"100%\" height={400}>\r\n        <LineChart margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"timestamp\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          \r\n          {/* Dynamically render lines for each added stock */}\r\n          {addedStocks.map((stock, index) => (\r\n            <Line\r\n              key={stock}\r\n              type=\"monotone\"\r\n              data={stockData[stock]}\r\n              dataKey=\"close\"  // You can also compare on 'open' or other properties\r\n              name={stock}\r\n              stroke={lineColors[index % lineColors.length]}  // Assign a unique color\r\n              strokeWidth={3}\r\n              activeDot={{ r: 8 }}\r\n            />\r\n          ))}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockComparison;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,aAAa,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AAC7G,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAErF,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;EACzG,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAMqB,cAAc,GAAIC,MAAM,IAAK;IACjCb,KAAK,CAACc,GAAG,CAAC,wCAAwCD,MAAM,EAAE,CAAC,CACxDE,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,aAAa,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACC,IAAI,KAAK;QAC/CC,SAAS,EAAE,IAAIC,IAAI,CAACF,IAAI,CAACC,SAAS,CAAC,CAACE,kBAAkB,CAAC,OAAO,CAAC;QAC/DC,IAAI,EAAEJ,IAAI,CAACI,IAAI;QACfC,KAAK,EAAEL,IAAI,CAACK;MACd,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIN,IAAI,CAACK,CAAC,CAACN,SAAS,CAAC,GAAG,IAAIC,IAAI,CAACM,CAAC,CAACP,SAAS,CAAC,CAAC;MAEjEd,YAAY,CAACsB,SAAS,KAAK;QACzB,GAAGA,SAAS;QACZ,CAAChB,MAAM,GAAGI;MACZ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CACDa,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAME,cAAc,GAAIpB,MAAM,IAAK;IACjCF,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAEG,MAAM,CAAC,CAAC;IACxCD,cAAc,CAACC,MAAM,CAAC;IACtBJ,kBAAkB,CAACD,eAAe,CAAC0B,MAAM,CAACC,KAAK,IAAIA,KAAK,KAAKtB,MAAM,CAAC,CAAC;EACvE,CAAC;EAED,oBACEX,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MAAAkC,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGvBtC,OAAA;MAAKuC,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAN,QAAA,EAClC5B,eAAe,CAACW,GAAG,CAACgB,KAAK,iBACxBjC,OAAA;QAEEyC,OAAO,EAAEA,CAAA,KAAMV,cAAc,CAACE,KAAK,CAAE;QACrCM,KAAK,EAAE;UACLG,WAAW,EAAE,MAAM;UACnBC,OAAO,EAAE,WAAW;UACpBC,eAAe,EAAE,SAAS;UAC1BC,MAAM,EAAE,gBAAgB;UACxBC,MAAM,EAAE;QACV,CAAE;QAAAZ,QAAA,GACH,MACK,EAACD,KAAK;MAAA,GAVLA,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWJ,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNtC,OAAA,CAACH,mBAAmB;MAACkD,KAAK,EAAC,MAAM;MAACC,MAAM,EAAE,GAAI;MAAAd,QAAA,eAC5ClC,OAAA,CAACV,SAAS;QAAC2D,MAAM,EAAE;UAAEC,GAAG,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,IAAI,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAE,CAAE;QAAAnB,QAAA,gBAC7DlC,OAAA,CAACL,aAAa;UAAC2D,eAAe,EAAC;QAAK;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvCtC,OAAA,CAACR,KAAK;UAAC+D,OAAO,EAAC;QAAW;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7BtC,OAAA,CAACP,KAAK;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACTtC,OAAA,CAACN,OAAO;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACXtC,OAAA,CAACJ,MAAM;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAGT9B,WAAW,CAACS,GAAG,CAAC,CAACgB,KAAK,EAAEuB,KAAK,kBAC5BxD,OAAA,CAACT,IAAI;UAEHkE,IAAI,EAAC,UAAU;UACfzC,IAAI,EAAEZ,SAAS,CAAC6B,KAAK,CAAE;UACvBsB,OAAO,EAAC,OAAO,CAAE;UAAA;UACjBG,IAAI,EAAEzB,KAAM;UACZ0B,MAAM,EAAE1D,UAAU,CAACuD,KAAK,GAAGvD,UAAU,CAAC2D,MAAM,CAAE,CAAE;UAAA;UAChDC,WAAW,EAAE,CAAE;UACfC,SAAS,EAAE;YAAEC,CAAC,EAAE;UAAE;QAAE,GAPf9B,KAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQX,CACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACnC,EAAA,CAjFID,eAAe;AAAA8D,EAAA,GAAf9D,eAAe;AAmFrB,eAAeA,eAAe;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}