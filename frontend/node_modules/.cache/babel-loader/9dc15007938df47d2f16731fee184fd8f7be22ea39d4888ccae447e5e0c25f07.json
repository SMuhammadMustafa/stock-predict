{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studies\\\\FYP\\\\Frontend\\\\fyp\\\\src\\\\components\\\\StockChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTooltip = ({\n  active,\n  payload,\n  label\n}) => {\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'black',\n        padding: '10px',\n        borderRadius: '5px',\n        color: 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Time: ${label}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Open: ${payload[0].value}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Close: ${payload[1].value}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_c = CustomTooltip;\nconst StockChart = () => {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  const [selectedTicker, setSelectedTicker] = useState(''); // Initially no ticker selected\n  const [tickers, setTickers] = useState([]); // To hold ticker names\n  const [selectedPeriod, setSelectedPeriod] = useState('1W'); // Default period\n\n  // Fetch ticker names from the backend\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/tickers').then(response => {\n      setTickers(response.data);\n      if (response.data.length > 0) {\n        setSelectedTicker(response.data[0]); // Set default ticker to the first one\n      }\n    }).catch(error => {\n      console.error('Error fetching tickers', error);\n    });\n  }, []);\n\n  // Fetch stock data from API based on selected ticker\n  const fetchStockData = ticker => {\n    axios.get(`http://localhost:5000/api/stock-data/${ticker}`).then(response => {\n      const formattedData = response.data.map(item => ({\n        timestamp: new Date(item.timestamp),\n        open: item.open,\n        close: item.close\n      })).sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n      setStockData(formattedData);\n    }).catch(error => {\n      console.error('Error fetching stock data', error);\n    });\n  };\n  useEffect(() => {\n    if (selectedTicker) {\n      // Fetch data for the selected ticker when it changes\n      fetchStockData(selectedTicker);\n    }\n  }, [selectedTicker]);\n\n  // Filter the data based on the selected time period\n  const filterDataByPeriod = (data, period) => {\n    const now = new Date(\"2024-09-18\");\n    let filteredData = [];\n    switch (period) {\n      case '1W':\n        filteredData = data.filter(item => now - item.timestamp <= 7 * 24 * 60 * 60 * 1000);\n        break;\n      case '1M':\n        filteredData = data.filter(item => now - item.timestamp <= 30 * 24 * 60 * 60 * 1000);\n        break;\n      case '1Y':\n        filteredData = data.filter(item => now - item.timestamp <= 365 * 24 * 60 * 60 * 1000);\n        break;\n      case '5Y':\n        filteredData = data.filter(item => now - item.timestamp <= 5 * 365 * 24 * 60 * 60 * 1000);\n        break;\n      default:\n        filteredData = data; // Default to showing all data\n        break;\n    }\n    return filteredData.map(item => ({\n      ...item,\n      timestamp: item.timestamp.toLocaleDateString('en-US')\n    }));\n  };\n\n  // Handle ticker change\n  const handleTickerChange = e => {\n    setSelectedTicker(e.target.value);\n  };\n\n  // Handle time period toggle button click\n  const handlePeriodChange = period => {\n    setSelectedPeriod(period);\n  };\n\n  // Filter the stock data before displaying it based on the selected time period\n  const filteredStockData = filterDataByPeriod(stockData, selectedPeriod);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Stock Data for \", selectedTicker]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"tickerSelect\",\n      children: \"Select Ticker: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"tickerSelect\",\n      value: selectedTicker,\n      onChange: handleTickerChange,\n      children: tickers.map(ticker => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: ticker,\n        children: ticker\n      }, ticker, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange('1W'),\n        style: {\n          marginRight: '10px',\n          padding: '10px 20px',\n          backgroundColor: selectedPeriod === '1W' ? '#ffc333' : '#161616'\n        },\n        children: \"1 Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange('1M'),\n        style: {\n          marginRight: '10px',\n          padding: '10px 20px',\n          backgroundColor: selectedPeriod === '1M' ? '#ffc333' : '#161616'\n        },\n        children: \"1 Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange('1Y'),\n        style: {\n          marginRight: '10px',\n          padding: '10px 20px',\n          backgroundColor: selectedPeriod === '1Y' ? '#ffc333' : '#161616'\n        },\n        children: \"1 Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange('5Y'),\n        style: {\n          padding: '10px 20px',\n          backgroundColor: selectedPeriod === '5Y' ? '#ffc333' : '#161616'\n        },\n        children: \"5 Years\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 500,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: filteredStockData,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          backgroundColor: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"open\",\n          stroke: \"#ffffff\",\n          strokeWidth: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"close\",\n          stroke: \"#ffc333\",\n          strokeWidth: 3,\n          activeDot: {\n            r: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(StockChart, \"AllTNl1CnXrHiW74WVD+8mdijP0=\");\n_c2 = StockChart;\nexport default StockChart;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomTooltip\");\n$RefreshReg$(_c2, \"StockChart\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","Legend","ResponsiveContainer","axios","jsxDEV","_jsxDEV","CustomTooltip","active","payload","label","length","style","backgroundColor","padding","borderRadius","color","children","fileName","_jsxFileName","lineNumber","columnNumber","value","_c","StockChart","_s","stockData","setStockData","selectedTicker","setSelectedTicker","tickers","setTickers","selectedPeriod","setSelectedPeriod","get","then","response","data","catch","error","console","fetchStockData","ticker","formattedData","map","item","timestamp","Date","open","close","sort","a","b","filterDataByPeriod","period","now","filteredData","filter","toLocaleDateString","handleTickerChange","e","target","handlePeriodChange","filteredStockData","htmlFor","id","onChange","margin","onClick","marginRight","width","height","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","strokeWidth","activeDot","r","_c2","$RefreshReg$"],"sources":["D:/Studies/FYP/Frontend/fyp/src/components/StockChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\r\nimport axios from 'axios';\r\n\r\nconst CustomTooltip = ({ active, payload, label }) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div style={{ backgroundColor: 'black', padding: '10px', borderRadius: '5px', color: 'white' }}>\r\n        <p>{`Time: ${label}`}</p>\r\n        <p>{`Open: ${payload[0].value}`}</p>\r\n        <p>{`Close: ${payload[1].value}`}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst StockChart = () => {\r\n  const [stockData, setStockData] = useState([]);\r\n  const [selectedTicker, setSelectedTicker] = useState(''); // Initially no ticker selected\r\n  const [tickers, setTickers] = useState([]); // To hold ticker names\r\n  const [selectedPeriod, setSelectedPeriod] = useState('1W'); // Default period\r\n\r\n  // Fetch ticker names from the backend\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/tickers')\r\n      .then(response => {\r\n        setTickers(response.data);\r\n        if (response.data.length > 0) {\r\n          setSelectedTicker(response.data[0]); // Set default ticker to the first one\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching tickers', error);\r\n      });\r\n  }, []);\r\n\r\n  // Fetch stock data from API based on selected ticker\r\n  const fetchStockData = (ticker) => {\r\n    axios.get(`http://localhost:5000/api/stock-data/${ticker}`)\r\n      .then(response => {\r\n        const formattedData = response.data.map(item => ({\r\n          timestamp: new Date(item.timestamp),\r\n          open: item.open,\r\n          close: item.close,\r\n        })).sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n        setStockData(formattedData);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching stock data', error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedTicker) {\r\n      // Fetch data for the selected ticker when it changes\r\n      fetchStockData(selectedTicker);\r\n    }\r\n  }, [selectedTicker]);\r\n\r\n  // Filter the data based on the selected time period\r\n  const filterDataByPeriod = (data, period) => {\r\n    const now = new Date(\"2024-09-18\");\r\n    let filteredData = [];\r\n\r\n    switch (period) {\r\n      case '1W':\r\n        filteredData = data.filter(item => (now - item.timestamp) <= 7 * 24 * 60 * 60 * 1000);\r\n        break;\r\n      case '1M':\r\n        filteredData = data.filter(item => (now - item.timestamp) <= 30 * 24 * 60 * 60 * 1000);\r\n        break;\r\n      case '1Y':\r\n        filteredData = data.filter(item => (now - item.timestamp) <= 365 * 24 * 60 * 60 * 1000);\r\n        break;\r\n      case '5Y':\r\n        filteredData = data.filter(item => (now - item.timestamp) <= 5 * 365 * 24 * 60 * 60 * 1000);\r\n        break;\r\n      default:\r\n        filteredData = data; // Default to showing all data\r\n        break;\r\n    }\r\n\r\n    return filteredData.map(item => ({\r\n      ...item,\r\n      timestamp: item.timestamp.toLocaleDateString('en-US'),\r\n    }));\r\n  };\r\n\r\n  // Handle ticker change\r\n  const handleTickerChange = (e) => {\r\n    setSelectedTicker(e.target.value);\r\n  };\r\n\r\n  // Handle time period toggle button click\r\n  const handlePeriodChange = (period) => {\r\n    setSelectedPeriod(period);\r\n  };\r\n\r\n  // Filter the stock data before displaying it based on the selected time period\r\n  const filteredStockData = filterDataByPeriod(stockData, selectedPeriod);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Stock Data for {selectedTicker}</h2>\r\n\r\n      {/* Dropdown to select ticker */}\r\n      <label htmlFor=\"tickerSelect\">Select Ticker: </label>\r\n      <select id=\"tickerSelect\" value={selectedTicker} onChange={handleTickerChange}>\r\n        {tickers.map(ticker => (\r\n          <option key={ticker} value={ticker}>\r\n            {ticker}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Time period toggle buttons */}\r\n      <div style={{ margin: '20px 0' }}>\r\n        <button onClick={() => handlePeriodChange('1W')} style={{ marginRight: '10px', padding: '10px 20px', backgroundColor: selectedPeriod === '1W' ? '#ffc333' : '#161616' }}>\r\n          1 Week\r\n        </button>\r\n        <button onClick={() => handlePeriodChange('1M')} style={{ marginRight: '10px', padding: '10px 20px', backgroundColor: selectedPeriod === '1M' ? '#ffc333' : '#161616' }}>\r\n          1 Month\r\n          </button>\r\n        <button onClick={() => handlePeriodChange('1Y')} style={{ marginRight: '10px', padding: '10px 20px', backgroundColor: selectedPeriod === '1Y' ? '#ffc333' : '#161616' }}>\r\n          1 Year\r\n        </button>\r\n        <button onClick={() => handlePeriodChange('5Y')} style={{ padding: '10px 20px', backgroundColor: selectedPeriod === '5Y' ? '#ffc333' : '#161616' }}>\r\n          5 Years\r\n        </button>\r\n      </div>\r\n\r\n      {/* Stock chart */}\r\n      <ResponsiveContainer width=\"100%\" height={500}>\r\n        <LineChart data={filteredStockData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"timestamp\" />\r\n          <YAxis />\r\n          <Tooltip backgroundColor=\"black\" />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"open\" stroke=\"#ffffff\" strokeWidth={3} />\r\n          <Line type=\"monotone\" dataKey=\"close\" stroke=\"#ffc333\" strokeWidth={3} activeDot={{ r: 8 }} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}