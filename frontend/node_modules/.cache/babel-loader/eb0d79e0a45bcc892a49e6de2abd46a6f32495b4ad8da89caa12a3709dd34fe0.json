{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studies\\\\FYP\\\\Frontend\\\\fyp\\\\src\\\\components\\\\StockComparison.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\nimport axios from 'axios';\n\n// Colors array for different stocks\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lineColors = ['#ffffff', '#ffc333', '#3333ff', '#ffcc33', '#cc33ff', '#33cccc'];\n\n// Define available periods\nconst periods = [{\n  label: '1 Week',\n  value: '1W'\n}, {\n  label: '1 Month',\n  value: '1M'\n}, {\n  label: '1 Year',\n  value: '1Y'\n}, {\n  label: '5 Years',\n  value: '5Y'\n}];\n\n// Filter data based on the selected time period\nconst filterDataByPeriod = (data, period) => {\n  const now = new Date(\"2024-09-18\"); // Use the current date as a reference\n  let filteredData = [];\n  switch (period) {\n    case '1W':\n      // Last 1 week\n      filteredData = data.filter(item => now - new Date(item.timestamp) <= 7 * 24 * 60 * 60 * 1000);\n      break;\n    case '1M':\n      // Last 1 month\n      filteredData = data.filter(item => now - new Date(item.timestamp) <= 30 * 24 * 60 * 60 * 1000);\n      break;\n    case '1Y':\n      // Last 1 year\n      filteredData = data.filter(item => now - new Date(item.timestamp) <= 365 * 24 * 60 * 60 * 1000);\n      break;\n    case '5Y':\n      // Last 5 years\n      filteredData = data.filter(item => now - new Date(item.timestamp) <= 5 * 365 * 24 * 60 * 60 * 1000);\n      break;\n    default:\n      filteredData = data; // Default to showing all data\n      break;\n  }\n  return filteredData;\n};\nconst StockComparison = () => {\n  _s();\n  const [stockData, setStockData] = useState({});\n  const [availableStocks, setAvailableStocks] = useState(['AAL', 'AASM', 'AATM', 'ABL', 'ABOT', 'ABSON']); // Example tickers\n  const [addedStocks, setAddedStocks] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to manage modal visibility\n  const [selectedStock, setSelectedStock] = useState(''); // State to track selected stock from the modal\n  const [selectedPeriod, setSelectedPeriod] = useState('1M'); // Default period selection\n\n  // Fetch stock data from API for a specific stock\n  const fetchStockData = ticker => {\n    axios.get(`http://localhost:5000/api/stock-data/${ticker}`).then(response => {\n      const formattedData = response.data.map(item => ({\n        timestamp: new Date(item.timestamp).toLocaleDateString('en-US'),\n        open: item.open,\n        close: item.close\n      })).sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n      setStockData(prevState => ({\n        ...prevState,\n        [ticker]: formattedData\n      }));\n    }).catch(error => {\n      console.error('Error fetching stock data', error);\n    });\n  };\n\n  // Handle adding stock from the modal\n  const handleAddStock = () => {\n    if (selectedStock) {\n      setAddedStocks([...addedStocks, selectedStock]);\n      fetchStockData(selectedStock); // Fetch full data for the stock\n      setAvailableStocks(availableStocks.filter(stock => stock !== selectedStock));\n      setIsModalOpen(false); // Close the modal after adding the stock\n    }\n  };\n\n  // Open the modal to select a stock\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  // Close the modal without adding a stock\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // Handle selecting a stock from the dropdown in the modal\n  const handleStockSelection = e => {\n    setSelectedStock(e.target.value);\n  };\n\n  // Handle period change\n  const handlePeriodChange = period => {\n    setSelectedPeriod(period);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Compare Stocks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: periods.map(period => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange(period.value),\n        style: {\n          marginRight: '10px',\n          padding: '10px 20px',\n          backgroundColor: selectedPeriod === '1Y' ? '#ffc333' : '#161616',\n          cursor: 'pointer'\n        },\n        children: period.label\n      }, period.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      style: {\n        marginBottom: '20px',\n        padding: '10px 20px',\n        backgroundColor: '#007bff',\n        color: '#fff',\n        border: 'none',\n        cursor: 'pointer'\n      },\n      children: \"Add Stocks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: modalStyles.overlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyles.modal,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a stock to add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedStock,\n          onChange: handleStockSelection,\n          style: {\n            padding: '10px',\n            width: '100%',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), availableStocks.map(stock => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: stock,\n            children: stock\n          }, stock, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddStock,\n            style: modalStyles.button,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            style: {\n              ...modalStyles.button,\n              backgroundColor: '#ccc'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), addedStocks.map((stock, index) => {\n          const filteredStockData = filterDataByPeriod(stockData[stock] || [], selectedPeriod); // Filter data by selected period\n          return /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            data: filteredStockData,\n            dataKey: \"close\" // You can also compare on 'open' or other properties\n            ,\n            name: stock,\n            stroke: lineColors[index % lineColors.length] // Assign a unique color\n            ,\n            strokeWidth: 3,\n            activeDot: {\n              r: 8\n            }\n          }, stock, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n// Simple modal styles (can be customized)\n_s(StockComparison, \"PP6bJ+eWX63BvS1lH73orryQ7Bg=\");\n_c = StockComparison;\nconst modalStyles = {\n  overlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000 // Ensure overlay is on top of the page content\n  },\n  modal: {\n    backgroundColor: '#fff',\n    padding: '20px',\n    borderRadius: '10px',\n    width: '400px',\n    boxShadow: '0 5px 15px rgba(0, 0, 0, 0.3)',\n    zIndex: 1100,\n    // Ensure modal content is above the overlay\n    position: 'relative' // Ensure proper positioning above the overlay\n  },\n  button: {\n    padding: '10px 20px',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    border: 'none',\n    cursor: 'pointer',\n    marginLeft: '10px'\n  }\n};\nexport default StockComparison;\nvar _c;\n$RefreshReg$(_c, \"StockComparison\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","Legend","ResponsiveContainer","axios","jsxDEV","_jsxDEV","lineColors","periods","label","value","filterDataByPeriod","data","period","now","Date","filteredData","filter","item","timestamp","StockComparison","_s","stockData","setStockData","availableStocks","setAvailableStocks","addedStocks","setAddedStocks","isModalOpen","setIsModalOpen","selectedStock","setSelectedStock","selectedPeriod","setSelectedPeriod","fetchStockData","ticker","get","then","response","formattedData","map","toLocaleDateString","open","close","sort","a","b","prevState","catch","error","console","handleAddStock","stock","openModal","closeModal","handleStockSelection","e","target","handlePeriodChange","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","onClick","marginRight","padding","backgroundColor","cursor","color","border","modalStyles","overlay","modal","onChange","width","disabled","textAlign","button","height","margin","top","right","left","bottom","strokeDasharray","dataKey","index","filteredStockData","type","name","stroke","length","strokeWidth","activeDot","r","_c","position","display","justifyContent","alignItems","zIndex","borderRadius","boxShadow","marginLeft","$RefreshReg$"],"sources":["D:/Studies/FYP/Frontend/fyp/src/components/StockComparison.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\r\nimport axios from 'axios';\r\n\r\n// Colors array for different stocks\r\nconst lineColors = ['#ffffff', '#ffc333', '#3333ff', '#ffcc33', '#cc33ff', '#33cccc'];\r\n\r\n// Define available periods\r\nconst periods = [\r\n  { label: '1 Week', value: '1W' },\r\n  { label: '1 Month', value: '1M' },\r\n  { label: '1 Year', value: '1Y' },\r\n  { label: '5 Years', value: '5Y' }\r\n];\r\n\r\n// Filter data based on the selected time period\r\nconst filterDataByPeriod = (data, period) => {\r\n  const now = new Date(\"2024-09-18\"); // Use the current date as a reference\r\n  let filteredData = [];\r\n\r\n  switch (period) {\r\n    case '1W': // Last 1 week\r\n      filteredData = data.filter(item => (now - new Date(item.timestamp)) <= 7 * 24 * 60 * 60 * 1000);\r\n      break;\r\n    case '1M': // Last 1 month\r\n      filteredData = data.filter(item => (now - new Date(item.timestamp)) <= 30 * 24 * 60 * 60 * 1000);\r\n      break;\r\n    case '1Y': // Last 1 year\r\n      filteredData = data.filter(item => (now - new Date(item.timestamp)) <= 365 * 24 * 60 * 60 * 1000);\r\n      break;\r\n    case '5Y': // Last 5 years\r\n      filteredData = data.filter(item => (now - new Date(item.timestamp)) <= 5 * 365 * 24 * 60 * 60 * 1000);\r\n      break;\r\n    default:\r\n      filteredData = data; // Default to showing all data\r\n      break;\r\n  }\r\n\r\n  return filteredData;\r\n};\r\n\r\nconst StockComparison = () => {\r\n  const [stockData, setStockData] = useState({});\r\n  const [availableStocks, setAvailableStocks] = useState(['AAL', 'AASM', 'AATM', 'ABL', 'ABOT', 'ABSON']); // Example tickers\r\n  const [addedStocks, setAddedStocks] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to manage modal visibility\r\n  const [selectedStock, setSelectedStock] = useState(''); // State to track selected stock from the modal\r\n  const [selectedPeriod, setSelectedPeriod] = useState('1M'); // Default period selection\r\n\r\n  // Fetch stock data from API for a specific stock\r\n  const fetchStockData = (ticker) => {\r\n    axios.get(`http://localhost:5000/api/stock-data/${ticker}`)\r\n      .then(response => {\r\n        const formattedData = response.data.map(item => ({\r\n          timestamp: new Date(item.timestamp).toLocaleDateString('en-US'),\r\n          open: item.open,\r\n          close: item.close,\r\n        })).sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n\r\n        setStockData(prevState => ({\r\n          ...prevState,\r\n          [ticker]: formattedData\r\n        }));\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching stock data', error);\r\n      });\r\n  };\r\n\r\n  // Handle adding stock from the modal\r\n  const handleAddStock = () => {\r\n    if (selectedStock) {\r\n      setAddedStocks([...addedStocks, selectedStock]);\r\n      fetchStockData(selectedStock); // Fetch full data for the stock\r\n      setAvailableStocks(availableStocks.filter(stock => stock !== selectedStock));\r\n      setIsModalOpen(false); // Close the modal after adding the stock\r\n    }\r\n  };\r\n\r\n  // Open the modal to select a stock\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Close the modal without adding a stock\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  // Handle selecting a stock from the dropdown in the modal\r\n  const handleStockSelection = (e) => {\r\n    setSelectedStock(e.target.value);\r\n  };\r\n\r\n  // Handle period change\r\n  const handlePeriodChange = (period) => {\r\n    setSelectedPeriod(period);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Compare Stocks</h2>\r\n\r\n      {/* Toggle buttons to select the period */}\r\n      <div style={{ marginBottom: '20px' }}>\r\n        {periods.map(period => (\r\n          <button\r\n            key={period.value}\r\n            onClick={() => handlePeriodChange(period.value)}\r\n            style={{\r\n                marginRight: '10px',\r\n                padding: '10px 20px',\r\n                backgroundColor: selectedPeriod === '1Y' ? '#ffc333' : '#161616',\r\n                cursor: 'pointer',\r\n              }}\r\n          >\r\n            {period.label}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Button to open modal to add stocks */}\r\n      <button\r\n        onClick={openModal}\r\n        style={{\r\n          marginBottom: '20px',\r\n          padding: '10px 20px',\r\n          backgroundColor: '#007bff',\r\n          color: '#fff',\r\n          border: 'none',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        Add Stocks\r\n      </button>\r\n\r\n      {/* Modal for selecting stocks */}\r\n      {isModalOpen && (\r\n        <div style={modalStyles.overlay}>\r\n          <div style={modalStyles.modal}>\r\n            <h3>Select a stock to add</h3>\r\n            <select\r\n              value={selectedStock}\r\n              onChange={handleStockSelection}\r\n              style={{ padding: '10px', width: '100%', marginBottom: '20px' }}\r\n            >\r\n              <option value=\"\" disabled>Select a stock</option>\r\n              {availableStocks.map(stock => (\r\n                <option key={stock} value={stock}>\r\n                  {stock}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <div style={{ textAlign: 'right' }}>\r\n              <button onClick={handleAddStock} style={modalStyles.button}>Add</button>\r\n              <button onClick={closeModal} style={{ ...modalStyles.button, backgroundColor: '#ccc' }}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Stock comparison chart */}\r\n      <ResponsiveContainer width=\"100%\" height={400}>\r\n        <LineChart margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"timestamp\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n\r\n          {/* Dynamically render lines for each added stock */}\r\n          {addedStocks.map((stock, index) => {\r\n            const filteredStockData = filterDataByPeriod(stockData[stock] || [], selectedPeriod); // Filter data by selected period\r\n            return (\r\n              <Line\r\n                key={stock}\r\n                type=\"monotone\"\r\n                data={filteredStockData}\r\n                dataKey=\"close\"  // You can also compare on 'open' or other properties\r\n                name={stock}\r\n                stroke={lineColors[index % lineColors.length]}  // Assign a unique color\r\n                strokeWidth={3}\r\n                activeDot={{ r: 8 }}\r\n              />\r\n            );\r\n          })}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Simple modal styles (can be customized)\r\nconst modalStyles = {\r\n  overlay: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    zIndex: 1000,  // Ensure overlay is on top of the page content\r\n  },\r\n  modal: {\r\n    backgroundColor: '#fff',\r\n    padding: '20px',\r\n    borderRadius: '10px',\r\n    width: '400px',\r\n    boxShadow: '0 5px 15px rgba(0, 0, 0, 0.3)',\r\n    zIndex: 1100,  // Ensure modal content is above the overlay\r\n    position: 'relative', // Ensure proper positioning above the overlay\r\n  },\r\n  button: {\r\n    padding: '10px 20px',\r\n    backgroundColor: '#007bff',\r\n    color: '#fff',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n    marginLeft: '10px',\r\n  }\r\n};\r\n\r\nexport default StockComparison;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}