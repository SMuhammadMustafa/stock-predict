{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studies\\\\FYP\\\\Frontend\\\\fyp\\\\src\\\\components\\\\StockChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockChart = () => {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  useEffect(() => {\n    // Fetch stock data from API\n    axios.get('http://localhost:5000/api/stock-data').then(response => {\n      // Parse and format the data for the chart\n      const formattedData = response.data.map(item => ({\n        timestamp: new Date(item.timestamp).toLocaleDateString('en-US'),\n        open: item.open,\n        close: item.close\n      }));\n      setStockData(formattedData);\n    }).catch(error => {\n      console.error('Error fetching stock data', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: stockData,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"timestamp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"open\",\n        stroke: \"#8884d8\",\n        activeDot: {\n          r: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"close\",\n        stroke: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(StockChart, \"UHMRx5rd6U+J7YyAJ82PYuAdhyc=\");\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","Legend","ResponsiveContainer","axios","jsxDEV","_jsxDEV","StockChart","_s","stockData","setStockData","get","then","response","formattedData","data","map","item","timestamp","Date","toLocaleDateString","open","close","catch","error","console","width","height","children","margin","top","right","left","bottom","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","type","stroke","activeDot","r","_c","$RefreshReg$"],"sources":["D:/Studies/FYP/Frontend/fyp/src/components/StockChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from 'recharts';\r\nimport axios from 'axios';\r\n\r\nconst StockChart = () => {\r\n  const [stockData, setStockData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch stock data from API\r\n    axios.get('http://localhost:5000/api/stock-data')\r\n      .then(response => {\r\n        // Parse and format the data for the chart\r\n        const formattedData = response.data.map(item => ({\r\n          timestamp: new Date(item.timestamp).toLocaleDateString('en-US'),\r\n          open: item.open,\r\n          close: item.close,\r\n        }));\r\n        setStockData(formattedData);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching stock data', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={400}>\r\n      <LineChart data={stockData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"timestamp\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"open\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n        <Line type=\"monotone\" dataKey=\"close\" stroke=\"#82ca9d\" />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default StockChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}