{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studies\\\\FYP\\\\Frontend\\\\fyp\\\\src\\\\components\\\\StockComparison.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend, ResponsiveContainer } from \"recharts\";\nimport CustomTooltip from \"./CustomTooltip\";\nimport axios from \"axios\";\n\n// Colors array for different stocks\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst lineColors = [\"#ffffff\", \"#ffc333\", \"#3333ff\", \"#2aa34d\", \"#cc33ff\", \"#33cccc\"];\n\n// Define available periods\nconst periods = [{\n  label: \"1 Week\",\n  value: \"1W\"\n}, {\n  label: \"1 Month\",\n  value: \"1M\"\n}, {\n  label: \"1 Year\",\n  value: \"1Y\"\n}, {\n  label: \"5 Years\",\n  value: \"5Y\"\n}];\n\n// Filter data based on the selected time period\nconst filterDataByPeriod = (data, period) => {\n  const now = new Date(\"2024-09-18\"); // Use the current date as a reference\n  let filteredData = [];\n  switch (period) {\n    case \"1W\":\n      // Last 1 week\n      filteredData = data.filter(item => now - new Date(item.timestamp) <= 7 * 24 * 60 * 60 * 1000);\n      break;\n    case \"1M\":\n      // Last 1 month\n      filteredData = data.filter(item => now - new Date(item.timestamp) <= 30 * 24 * 60 * 60 * 1000);\n      break;\n    case \"1Y\":\n      // Last 1 year\n      filteredData = data.filter(item => now - new Date(item.timestamp) <= 365 * 24 * 60 * 60 * 1000);\n      break;\n    case \"5Y\":\n      // Last 5 years\n      filteredData = data.filter(item => now - new Date(item.timestamp) <= 5 * 365 * 24 * 60 * 60 * 1000);\n      break;\n    default:\n      filteredData = data; // Default to showing all data\n      break;\n  }\n  return filteredData;\n};\nconst StockComparison = () => {\n  _s();\n  const [stockData, setStockData] = useState({});\n  const [availableStocks, setAvailableStocks] = useState([]);\n  const [addedStocks, setAddedStocks] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to manage modal visibility\n  const [selectedStock, setSelectedStock] = useState(\"\"); // State to track selected stock from the modal\n  const [selectedPeriod, setSelectedPeriod] = useState(\"1W\"); // Default period selection\n\n  // Fetch ticker names from the backend\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/tickers\").then(response => {\n      setAvailableStocks(response.data);\n      if (response.data.length > 0) {\n        setSelectedStock(response.data[0]); // Set default ticker to the first one\n      }\n    }).catch(error => {\n      console.error(\"Error fetching tickers\", error);\n    });\n  }, []);\n\n  // Fetch stock data from API for a specific stock\n  const fetchStockData = ticker => {\n    axios.get(`http://localhost:5000/api/stock-data/${ticker}`).then(response => {\n      const formattedData = response.data.map(item => ({\n        timestamp: new Date(item.timestamp).toLocaleDateString(\"en-US\"),\n        open: item.open,\n        close: item.close\n      })).sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n      setStockData(prevState => ({\n        ...prevState,\n        [ticker]: formattedData\n      }));\n    }).catch(error => {\n      console.error(\"Error fetching stock data\", error);\n    });\n  };\n\n  // Find the common set of timestamps\n  const getCommonTimestamps = allStockData => {\n    const timestampsSet = new Set();\n    Object.values(allStockData).forEach(stock => {\n      stock.forEach(dataPoint => {\n        timestampsSet.add(dataPoint.timestamp);\n      });\n    });\n    return Array.from(timestampsSet).sort((a, b) => new Date(a) - new Date(b));\n  };\n\n  // Normalize the stock data to match the common timestamps\n  const normalizeDataToCommonTimestamps = (stockData, commonTimestamps) => {\n    return commonTimestamps.map(timestamp => {\n      const dataPoint = stockData.find(data => data.timestamp === timestamp);\n      return {\n        timestamp,\n        close: dataPoint ? dataPoint.close : null // Use `null` if no data for this timestamp\n      };\n    });\n  };\n\n  // Handle adding stock from the modal\n  const handleAddStock = () => {\n    if (selectedStock) {\n      setAddedStocks([...addedStocks, selectedStock]);\n      fetchStockData(selectedStock); // Fetch full data for the stock\n      setAvailableStocks(availableStocks.filter(stock => stock !== selectedStock));\n      setIsModalOpen(false); // Close the modal after adding the stock\n    }\n  };\n\n  // Open the modal to select a stock\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  // Close the modal without adding a stock\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // Handle selecting a stock from the dropdown in the modal\n  const handleStockSelection = e => {\n    setSelectedStock(e.target.value);\n  };\n\n  // Handle period change\n  const handlePeriodChange = period => {\n    setSelectedPeriod(period);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Compare Stocks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"20px 0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange(\"1W\"),\n        style: {\n          marginRight: \"10px\",\n          padding: \"10px 20px\",\n          backgroundColor: selectedPeriod === \"1W\" ? \"#ffc333\" : \"#161616\",\n          cursor: \"pointer\"\n        },\n        children: \"1 Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange(\"1M\"),\n        style: {\n          marginRight: \"10px\",\n          padding: \"10px 20px\",\n          backgroundColor: selectedPeriod === \"1M\" ? \"#ffc333\" : \"#161616\",\n          cursor: \"pointer\"\n        },\n        children: \"1 Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange(\"1Y\"),\n        style: {\n          marginRight: \"10px\",\n          padding: \"10px 20px\",\n          backgroundColor: selectedPeriod === \"1Y\" ? \"#ffc333\" : \"#161616\",\n          cursor: \"pointer\"\n        },\n        children: \"1 Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePeriodChange(\"5Y\"),\n        style: {\n          padding: \"10px 20px\",\n          backgroundColor: selectedPeriod === \"5Y\" ? \"#ffc333\" : \"#161616\",\n          cursor: \"pointer\"\n        },\n        children: \"5 Years\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      style: {\n        marginBottom: \"20px\",\n        padding: \"10px 20px\",\n        backgroundColor: \"#161616\",\n        color: \"#fff\",\n        border: \"none\",\n        cursor: \"pointer\"\n      },\n      children: \"Add Stocks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: modalStyles.overlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyles.modal,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a stock to add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedStock,\n          onChange: handleStockSelection,\n          style: {\n            padding: \"10px\",\n            width: \"100%\",\n            marginBottom: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), availableStocks.map(stock => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: stock,\n            children: stock\n          }, stock, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddStock,\n            style: {\n              ...modalStyles.button,\n              backgroundColor: \"#161616\"\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            style: {\n              ...modalStyles.button,\n              backgroundColor: \"#333333\"\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 500,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        margin: {\n          top: 20,\n          right: 30,\n          left: 0,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), addedStocks.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"timestamp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 26\n            }, this),\n            cursor: {\n              fill: \"transparent\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), addedStocks.map((stock, index) => {\n            const stockData = stockData[stock] || [];\n            const filteredStockData = filterDataByPeriod(stockData, selectedPeriod);\n\n            // Get common timestamps across all stocks\n            const commonTimestamps = getCommonTimestamps(stockData);\n\n            // Normalize each stock's data to match the common timestamps\n            const normalizedStockData = normalizeDataToCommonTimestamps(filteredStockData, commonTimestamps);\n            return /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              data: normalizedStockData,\n              dataKey: \"close\",\n              name: stock,\n              stroke: lineColors[index % lineColors.length],\n              strokeWidth: 3,\n              activeDot: {\n                r: 8\n              }\n            }, stock, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n\n// Simple modal styles (can be customized)\n_s(StockComparison, \"DzCKUn6OTZLJ75VuflMay01uTN4=\");\n_c = StockComparison;\nconst modalStyles = {\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    zIndex: 1000 // Ensure overlay is on top of the page content\n  },\n  modal: {\n    backgroundColor: \"#1f1f1f\",\n    padding: \"20px\",\n    borderRadius: \"10px\",\n    width: \"400px\",\n    boxShadow: \"0 5px 15px rgba(0, 0, 0, 0.3)\",\n    zIndex: 1100,\n    // Ensure modal content is above the overlay\n    position: \"relative\" // Ensure proper positioning above the overlay\n  },\n  button: {\n    padding: \"10px 20px\",\n    backgroundColor: \"#007bff\",\n    color: \"#fff\",\n    border: \"none\",\n    cursor: \"pointer\",\n    marginLeft: \"10px\"\n  }\n};\nexport default StockComparison;\nvar _c;\n$RefreshReg$(_c, \"StockComparison\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","Legend","ResponsiveContainer","CustomTooltip","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","lineColors","periods","label","value","filterDataByPeriod","data","period","now","Date","filteredData","filter","item","timestamp","StockComparison","_s","stockData","setStockData","availableStocks","setAvailableStocks","addedStocks","setAddedStocks","isModalOpen","setIsModalOpen","selectedStock","setSelectedStock","selectedPeriod","setSelectedPeriod","get","then","response","length","catch","error","console","fetchStockData","ticker","formattedData","map","toLocaleDateString","open","close","sort","a","b","prevState","getCommonTimestamps","allStockData","timestampsSet","Set","Object","values","forEach","stock","dataPoint","add","Array","from","normalizeDataToCommonTimestamps","commonTimestamps","find","handleAddStock","openModal","closeModal","handleStockSelection","e","target","handlePeriodChange","children","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","onClick","marginRight","padding","backgroundColor","cursor","marginBottom","color","border","modalStyles","overlay","modal","onChange","width","disabled","textAlign","button","height","top","right","left","bottom","strokeDasharray","dataKey","content","fill","index","filteredStockData","normalizedStockData","type","name","stroke","strokeWidth","activeDot","r","_c","position","display","justifyContent","alignItems","zIndex","borderRadius","boxShadow","marginLeft","$RefreshReg$"],"sources":["D:/Studies/FYP/Frontend/fyp/src/components/StockComparison.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport CustomTooltip from \"./CustomTooltip\";\r\nimport axios from \"axios\";\r\n\r\n// Colors array for different stocks\r\nconst lineColors = [\r\n  \"#ffffff\",\r\n  \"#ffc333\",\r\n  \"#3333ff\",\r\n  \"#2aa34d\",\r\n  \"#cc33ff\",\r\n  \"#33cccc\",\r\n];\r\n\r\n// Define available periods\r\nconst periods = [\r\n  { label: \"1 Week\", value: \"1W\" },\r\n  { label: \"1 Month\", value: \"1M\" },\r\n  { label: \"1 Year\", value: \"1Y\" },\r\n  { label: \"5 Years\", value: \"5Y\" },\r\n];\r\n\r\n// Filter data based on the selected time period\r\nconst filterDataByPeriod = (data, period) => {\r\n  const now = new Date(\"2024-09-18\"); // Use the current date as a reference\r\n  let filteredData = [];\r\n\r\n  switch (period) {\r\n    case \"1W\": // Last 1 week\r\n      filteredData = data.filter(\r\n        (item) => now - new Date(item.timestamp) <= 7 * 24 * 60 * 60 * 1000\r\n      );\r\n      break;\r\n    case \"1M\": // Last 1 month\r\n      filteredData = data.filter(\r\n        (item) => now - new Date(item.timestamp) <= 30 * 24 * 60 * 60 * 1000\r\n      );\r\n      break;\r\n    case \"1Y\": // Last 1 year\r\n      filteredData = data.filter(\r\n        (item) => now - new Date(item.timestamp) <= 365 * 24 * 60 * 60 * 1000\r\n      );\r\n      break;\r\n    case \"5Y\": // Last 5 years\r\n      filteredData = data.filter(\r\n        (item) =>\r\n          now - new Date(item.timestamp) <= 5 * 365 * 24 * 60 * 60 * 1000\r\n      );\r\n      break;\r\n    default:\r\n      filteredData = data; // Default to showing all data\r\n      break;\r\n  }\r\n\r\n  return filteredData;\r\n};\r\n\r\nconst StockComparison = () => {\r\n  const [stockData, setStockData] = useState({});\r\n  const [availableStocks, setAvailableStocks] = useState([]);\r\n  const [addedStocks, setAddedStocks] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to manage modal visibility\r\n  const [selectedStock, setSelectedStock] = useState(\"\"); // State to track selected stock from the modal\r\n  const [selectedPeriod, setSelectedPeriod] = useState(\"1W\"); // Default period selection\r\n\r\n  // Fetch ticker names from the backend\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/tickers\")\r\n      .then((response) => {\r\n        setAvailableStocks(response.data);\r\n        if (response.data.length > 0) {\r\n          setSelectedStock(response.data[0]); // Set default ticker to the first one\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching tickers\", error);\r\n      });\r\n  }, []);\r\n\r\n  // Fetch stock data from API for a specific stock\r\n  const fetchStockData = (ticker) => {\r\n    axios\r\n      .get(`http://localhost:5000/api/stock-data/${ticker}`)\r\n      .then((response) => {\r\n        const formattedData = response.data\r\n          .map((item) => ({\r\n            timestamp: new Date(item.timestamp).toLocaleDateString(\"en-US\"),\r\n            open: item.open,\r\n            close: item.close,\r\n          }))\r\n          .sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n\r\n        setStockData((prevState) => ({\r\n          ...prevState,\r\n          [ticker]: formattedData,\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching stock data\", error);\r\n      });\r\n  };\r\n\r\n  // Find the common set of timestamps\r\n  const getCommonTimestamps = (allStockData) => {\r\n    const timestampsSet = new Set();\r\n    Object.values(allStockData).forEach((stock) => {\r\n      stock.forEach((dataPoint) => {\r\n        timestampsSet.add(dataPoint.timestamp);\r\n      });\r\n    });\r\n    return Array.from(timestampsSet).sort((a, b) => new Date(a) - new Date(b));\r\n  };\r\n\r\n  // Normalize the stock data to match the common timestamps\r\n  const normalizeDataToCommonTimestamps = (stockData, commonTimestamps) => {\r\n    return commonTimestamps.map((timestamp) => {\r\n      const dataPoint = stockData.find((data) => data.timestamp === timestamp);\r\n      return {\r\n        timestamp,\r\n        close: dataPoint ? dataPoint.close : null, // Use `null` if no data for this timestamp\r\n      };\r\n    });\r\n  };\r\n\r\n  // Handle adding stock from the modal\r\n  const handleAddStock = () => {\r\n    if (selectedStock) {\r\n      setAddedStocks([...addedStocks, selectedStock]);\r\n      fetchStockData(selectedStock); // Fetch full data for the stock\r\n      setAvailableStocks(\r\n        availableStocks.filter((stock) => stock !== selectedStock)\r\n      );\r\n      setIsModalOpen(false); // Close the modal after adding the stock\r\n    }\r\n  };\r\n\r\n  // Open the modal to select a stock\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Close the modal without adding a stock\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  // Handle selecting a stock from the dropdown in the modal\r\n  const handleStockSelection = (e) => {\r\n    setSelectedStock(e.target.value);\r\n  };\r\n\r\n  // Handle period change\r\n  const handlePeriodChange = (period) => {\r\n    setSelectedPeriod(period);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Compare Stocks</h2>\r\n\r\n      {/* Toggle buttons to select the period */}\r\n      {/* Time period toggle buttons */}\r\n      <div style={{ margin: \"20px 0\" }}>\r\n        <button\r\n          onClick={() => handlePeriodChange(\"1W\")}\r\n          style={{\r\n            marginRight: \"10px\",\r\n            padding: \"10px 20px\",\r\n            backgroundColor: selectedPeriod === \"1W\" ? \"#ffc333\" : \"#161616\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          1 Week\r\n        </button>\r\n        <button\r\n          onClick={() => handlePeriodChange(\"1M\")}\r\n          style={{\r\n            marginRight: \"10px\",\r\n            padding: \"10px 20px\",\r\n            backgroundColor: selectedPeriod === \"1M\" ? \"#ffc333\" : \"#161616\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          1 Month\r\n        </button>\r\n        <button\r\n          onClick={() => handlePeriodChange(\"1Y\")}\r\n          style={{\r\n            marginRight: \"10px\",\r\n            padding: \"10px 20px\",\r\n            backgroundColor: selectedPeriod === \"1Y\" ? \"#ffc333\" : \"#161616\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          1 Year\r\n        </button>\r\n        <button\r\n          onClick={() => handlePeriodChange(\"5Y\")}\r\n          style={{\r\n            padding: \"10px 20px\",\r\n            backgroundColor: selectedPeriod === \"5Y\" ? \"#ffc333\" : \"#161616\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          5 Years\r\n        </button>\r\n      </div>\r\n\r\n      {/* Button to open modal to add stocks */}\r\n      <button\r\n        onClick={openModal}\r\n        style={{\r\n          marginBottom: \"20px\",\r\n          padding: \"10px 20px\",\r\n          backgroundColor: \"#161616\",\r\n          color: \"#fff\",\r\n          border: \"none\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Add Stocks\r\n      </button>\r\n\r\n      {/* Modal for selecting stocks */}\r\n      {isModalOpen && (\r\n        <div style={modalStyles.overlay}>\r\n          <div style={modalStyles.modal}>\r\n            <h3>Select a stock to add</h3>\r\n            <select\r\n              value={selectedStock}\r\n              onChange={handleStockSelection}\r\n              style={{ padding: \"10px\", width: \"100%\", marginBottom: \"20px\" }}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select a stock\r\n              </option>\r\n              {availableStocks.map((stock) => (\r\n                <option key={stock} value={stock}>\r\n                  {stock}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <div style={{ textAlign: \"right\" }}>\r\n              <button\r\n                onClick={handleAddStock}\r\n                style={{ ...modalStyles.button, backgroundColor: \"#161616\" }}\r\n              >\r\n                Add\r\n              </button>\r\n              <button\r\n                onClick={closeModal}\r\n                style={{ ...modalStyles.button, backgroundColor: \"#333333\" }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Stock comparison chart */}\r\n      <ResponsiveContainer width=\"100%\" height={500}>\r\n        <LineChart margin={{ top: 20, right: 30, left: 0, bottom: 5 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n\r\n          {/* Calculate common timestamps based on all added stocks */}\r\n          {addedStocks.length > 0 && (\r\n            <>\r\n              <XAxis dataKey=\"timestamp\" />\r\n              <YAxis />\r\n              <Tooltip\r\n                content={<CustomTooltip />}\r\n                cursor={{ fill: \"transparent\" }}\r\n              />\r\n              <Legend />\r\n\r\n              {addedStocks.map((stock, index) => {\r\n                const stockData = stockData[stock] || [];\r\n                const filteredStockData = filterDataByPeriod(\r\n                  stockData,\r\n                  selectedPeriod\r\n                );\r\n\r\n                // Get common timestamps across all stocks\r\n                const commonTimestamps = getCommonTimestamps(stockData);\r\n\r\n                // Normalize each stock's data to match the common timestamps\r\n                const normalizedStockData = normalizeDataToCommonTimestamps(\r\n                  filteredStockData,\r\n                  commonTimestamps\r\n                );\r\n\r\n                return (\r\n                  <Line\r\n                    key={stock}\r\n                    type=\"monotone\"\r\n                    data={normalizedStockData}\r\n                    dataKey=\"close\"\r\n                    name={stock}\r\n                    stroke={lineColors[index % lineColors.length]}\r\n                    strokeWidth={3}\r\n                    activeDot={{ r: 8 }}\r\n                  />\r\n                );\r\n              })}\r\n            </>\r\n          )}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Simple modal styles (can be customized)\r\nconst modalStyles = {\r\n  overlay: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    zIndex: 1000, // Ensure overlay is on top of the page content\r\n  },\r\n  modal: {\r\n    backgroundColor: \"#1f1f1f\",\r\n    padding: \"20px\",\r\n    borderRadius: \"10px\",\r\n    width: \"400px\",\r\n    boxShadow: \"0 5px 15px rgba(0, 0, 0, 0.3)\",\r\n    zIndex: 1100, // Ensure modal content is above the overlay\r\n    position: \"relative\", // Ensure proper positioning above the overlay\r\n  },\r\n  button: {\r\n    padding: \"10px 20px\",\r\n    backgroundColor: \"#007bff\",\r\n    color: \"#fff\",\r\n    border: \"none\",\r\n    cursor: \"pointer\",\r\n    marginLeft: \"10px\",\r\n  },\r\n};\r\n\r\nexport default StockComparison;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}