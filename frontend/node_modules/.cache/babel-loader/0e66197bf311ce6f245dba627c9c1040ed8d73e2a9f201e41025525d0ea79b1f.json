{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studies\\\\FYP\\\\Frontend\\\\fyp\\\\src\\\\components\\\\Learn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, Typography, Paper, List, ListItem, ListItemText } from \"@mui/material\";\n\n// Array of stock indicators\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst indicators = [{\n  name: \"Simple Moving Average (SMA)\",\n  formula: \"SMA = (P1 + P2 + ... + Pn) / n\",\n  description: \"The Simple Moving Average (SMA) is the average of a set of prices over a specific number of periods. It smooths out price data to identify the trend direction. Traders use SMA to determine support and resistance levels.\"\n}, {\n  name: \"Exponential Moving Average (EMA)\",\n  formula: \"EMA = (P today * (k)) + (EMA yesterday * (1 - k))\",\n  description: \"The Exponential Moving Average (EMA) gives more weight to recent prices, making it more responsive to new information. It’s used to identify the trend direction and potential reversal points.\"\n}, {\n  name: \"Relative Strength Index (RSI)\",\n  formula: \"RSI = 100 - (100 / (1 + RS))\",\n  description: \"The Relative Strength Index (RSI) measures the speed and change of price movements. It ranges from 0 to 100 and is used to identify overbought or oversold conditions in a market.\"\n}\n//   {\n//     name: \"Moving Average Convergence Divergence (MACD)\",\n//     formula: \"MACD = 12-EMA - 26-EMA\",\n//     description:\n//       \"The MACD is a trend-following momentum indicator that shows the relationship between two moving averages of a security's price. It's used to identify potential buy or sell signals.\",\n//   },\n//   {\n//     name: \"Bollinger Bands\",\n//     formula: \"Upper Band = SMA + (2 * Standard Deviation); Lower Band = SMA - (2 * Standard Deviation)\",\n//     description:\n//       \"Bollinger Bands consist of a middle band (SMA) and two outer bands. The bands expand and contract based on market volatility. Traders use them to identify overbought or oversold conditions.\",\n//   },\n];\nconst Learn = () => {\n  _s();\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\n  const handleIndicatorClick = indicator => {\n    // If the indicator is already selected, deselect it\n    if (selectedIndicator === indicator) {\n      setSelectedIndicator(null);\n    } else {\n      setSelectedIndicator(indicator);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Learn About Stock Indicators \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: indicators.map((indicator, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: () => handleIndicatorClick(indicator),\n        sx: {\n          cursor: \"pointer\"\n        } // Change the cursor to a pointer on hover\n        ,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: indicator.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), selectedIndicator && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        padding: 2,\n        marginTop: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: selectedIndicator.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          fontWeight: \"bold\"\n        },\n        children: [\"Formula: \", selectedIndicator.formula]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: selectedIndicator.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Learn, \"ga/oa/be5eeHmWEG1ElJiGMmEBE=\");\n_c = Learn;\nexport default Learn;\nvar _c;\n$RefreshReg$(_c, \"Learn\");","map":{"version":3,"names":["React","useState","Box","Typography","Paper","List","ListItem","ListItemText","jsxDEV","_jsxDEV","indicators","name","formula","description","Learn","_s","selectedIndicator","setSelectedIndicator","handleIndicatorClick","indicator","sx","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","button","onClick","cursor","primary","elevation","marginTop","variant","fontWeight","_c","$RefreshReg$"],"sources":["D:/Studies/FYP/Frontend/fyp/src/components/Learn.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@mui/material\";\r\n\r\n// Array of stock indicators\r\nconst indicators = [\r\n  {\r\n    name: \"Simple Moving Average (SMA)\",\r\n    formula: \"SMA = (P1 + P2 + ... + Pn) / n\",\r\n    description:\r\n      \"The Simple Moving Average (SMA) is the average of a set of prices over a specific number of periods. It smooths out price data to identify the trend direction. Traders use SMA to determine support and resistance levels.\",\r\n  },\r\n  {\r\n    name: \"Exponential Moving Average (EMA)\",\r\n    formula: \"EMA = (P today * (k)) + (EMA yesterday * (1 - k))\",\r\n    description:\r\n      \"The Exponential Moving Average (EMA) gives more weight to recent prices, making it more responsive to new information. It’s used to identify the trend direction and potential reversal points.\",\r\n  },\r\n  {\r\n    name: \"Relative Strength Index (RSI)\",\r\n    formula: \"RSI = 100 - (100 / (1 + RS))\",\r\n    description:\r\n      \"The Relative Strength Index (RSI) measures the speed and change of price movements. It ranges from 0 to 100 and is used to identify overbought or oversold conditions in a market.\",\r\n  },\r\n  //   {\r\n  //     name: \"Moving Average Convergence Divergence (MACD)\",\r\n  //     formula: \"MACD = 12-EMA - 26-EMA\",\r\n  //     description:\r\n  //       \"The MACD is a trend-following momentum indicator that shows the relationship between two moving averages of a security's price. It's used to identify potential buy or sell signals.\",\r\n  //   },\r\n  //   {\r\n  //     name: \"Bollinger Bands\",\r\n  //     formula: \"Upper Band = SMA + (2 * Standard Deviation); Lower Band = SMA - (2 * Standard Deviation)\",\r\n  //     description:\r\n  //       \"Bollinger Bands consist of a middle band (SMA) and two outer bands. The bands expand and contract based on market volatility. Traders use them to identify overbought or oversold conditions.\",\r\n  //   },\r\n];\r\n\r\nconst Learn = () => {\r\n  const [selectedIndicator, setSelectedIndicator] = useState(null);\r\n\r\n  const handleIndicatorClick = (indicator) => {\r\n    // If the indicator is already selected, deselect it\r\n    if (selectedIndicator === indicator) {\r\n      setSelectedIndicator(null);\r\n    } else {\r\n      setSelectedIndicator(indicator);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: 2 }}>\r\n      <h2> Learn About Stock Indicators </h2>\r\n\r\n      <List>\r\n        {indicators.map((indicator, index) => (\r\n          <ListItem\r\n            button\r\n            key={index}\r\n            onClick={() => handleIndicatorClick(indicator)}\r\n            sx={{ cursor: \"pointer\" }} // Change the cursor to a pointer on hover\r\n          >\r\n            <ListItemText primary={indicator.name} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n\r\n      {selectedIndicator && (\r\n        <Paper elevation={3} sx={{ padding: 2, marginTop: 2 }}>\r\n          <Typography variant=\"h5\">{selectedIndicator.name}</Typography>\r\n          <Typography variant=\"body1\" sx={{ fontWeight: \"bold\" }}>\r\n            Formula: {selectedIndicator.formula}\r\n          </Typography>\r\n          <Typography variant=\"body2\">\r\n            {selectedIndicator.description}\r\n          </Typography>\r\n        </Paper>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Learn;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}