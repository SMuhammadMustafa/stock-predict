{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studies\\\\FYP\\\\Frontend\\\\fyp\\\\src\\\\components\\\\StockChart.js\",\n  _s = $RefreshSig$();\n// src/components/StockChart.js\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { CircularProgress } from '@mui/material';\n\n// Chart.js registration (needed for Chart.js 3+)\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst StockChart = () => {\n  _s();\n  const [stockData, setStockData] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  // Example: Fetch stock data using Alpha Vantage API\n  useEffect(() => {\n    const fetchStockData = async () => {\n      const API_KEY = 'your_alpha_vantage_api_key';\n      const symbol = 'AAPL'; // Example: Apple stock symbol\n      const url = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${symbol}&apikey=${API_KEY}`;\n      try {\n        const response = await axios.get(url);\n        const timeSeries = response.data['Time Series (Daily)'];\n        const dates = Object.keys(timeSeries).reverse();\n        const prices = dates.map(date => timeSeries[date]['4. close']);\n\n        // Update chart data\n        setStockData({\n          labels: dates,\n          datasets: [{\n            label: `${symbol} Stock Price`,\n            data: prices,\n            borderColor: 'rgba(75, 192, 192, 1)',\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderWidth: 1\n          }]\n        });\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching stock data\", error);\n      }\n    };\n    fetchStockData();\n  }, []);\n\n  // Display loading state or chart\n  return loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Line, {\n    data: stockData,\n    options: {\n      responsive: true,\n      plugins: {\n        legend: {\n          display: true,\n          position: 'top'\n        }\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(StockChart, \"Zx4+Uix+GIfF6xjupjIB6AKljFk=\");\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","axios","CircularProgress","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","StockChart","_s","stockData","setStockData","loading","setLoading","fetchStockData","API_KEY","symbol","url","response","get","timeSeries","data","dates","Object","keys","reverse","prices","map","date","labels","datasets","label","borderColor","backgroundColor","borderWidth","error","console","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","plugins","legend","display","position","_c","$RefreshReg$"],"sources":["D:/Studies/FYP/Frontend/fyp/src/components/StockChart.js"],"sourcesContent":["// src/components/StockChart.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport { CircularProgress } from '@mui/material';\r\n\r\n// Chart.js registration (needed for Chart.js 3+)\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst StockChart = () => {\r\n  const [stockData, setStockData] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Example: Fetch stock data using Alpha Vantage API\r\n  useEffect(() => {\r\n    const fetchStockData = async () => {\r\n      const API_KEY = 'your_alpha_vantage_api_key';\r\n      const symbol = 'AAPL'; // Example: Apple stock symbol\r\n      const url = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${symbol}&apikey=${API_KEY}`;\r\n\r\n      try {\r\n        const response = await axios.get(url);\r\n        const timeSeries = response.data['Time Series (Daily)'];\r\n        \r\n        const dates = Object.keys(timeSeries).reverse();\r\n        const prices = dates.map(date => timeSeries[date]['4. close']);\r\n\r\n        // Update chart data\r\n        setStockData({\r\n          labels: dates,\r\n          datasets: [\r\n            {\r\n              label: `${symbol} Stock Price`,\r\n              data: prices,\r\n              borderColor: 'rgba(75, 192, 192, 1)',\r\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n              borderWidth: 1,\r\n            }\r\n          ]\r\n        });\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching stock data\", error);\r\n      }\r\n    };\r\n\r\n    fetchStockData();\r\n  }, []);\r\n\r\n  // Display loading state or chart\r\n  return loading ? (\r\n    <CircularProgress />\r\n  ) : (\r\n    <Line\r\n      data={stockData}\r\n      options={{\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            display: true,\r\n            position: 'top',\r\n          }\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StockChart;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,eAAe;;AAEhD;AACA,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClBT,OAAO,CAACU,QAAQ,CAACT,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE/F,MAAMI,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMuB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,OAAO,GAAG,4BAA4B;MAC5C,MAAMC,MAAM,GAAG,MAAM,CAAC,CAAC;MACvB,MAAMC,GAAG,GAAG,gFAAgFD,MAAM,WAAWD,OAAO,EAAE;MAEtH,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAACF,GAAG,CAAC;QACrC,MAAMG,UAAU,GAAGF,QAAQ,CAACG,IAAI,CAAC,qBAAqB,CAAC;QAEvD,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACJ,UAAU,CAAC,CAACK,OAAO,CAAC,CAAC;QAC/C,MAAMC,MAAM,GAAGJ,KAAK,CAACK,GAAG,CAACC,IAAI,IAAIR,UAAU,CAACQ,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC;;QAE9D;QACAjB,YAAY,CAAC;UACXkB,MAAM,EAAEP,KAAK;UACbQ,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,GAAGf,MAAM,cAAc;YAC9BK,IAAI,EAAEK,MAAM;YACZM,WAAW,EAAE,uBAAuB;YACpCC,eAAe,EAAE,yBAAyB;YAC1CC,WAAW,EAAE;UACf,CAAC;QAEL,CAAC,CAAC;QACFrB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOsB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDrB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,OAAOF,OAAO,gBACZN,OAAA,CAACX,gBAAgB;IAAA0C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAEpBlC,OAAA,CAACb,IAAI;IACH4B,IAAI,EAAEX,SAAU;IAChB+B,OAAO,EAAE;MACPC,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,OAAO,EAAE,IAAI;UACbC,QAAQ,EAAE;QACZ;MACF;IACF;EAAE;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CACF;AACH,CAAC;AAAC/B,EAAA,CAzDID,UAAU;AAAAuC,EAAA,GAAVvC,UAAU;AA2DhB,eAAeA,UAAU;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}